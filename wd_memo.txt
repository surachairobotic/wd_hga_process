python generate_tfrecord.py -x C:/wd_hga_process/TensorFlow/models/workspace/training_demo/images/train -l C:/wd_hga_process/TensorFlow/models/workspace/training_demo/annotations/label_map.pbtxt -o C:/wd_hga_process/TensorFlow/models/workspace/training_demo/annotations/train.record
python generate_tfrecord.py -x C:/wd_hga_process/TensorFlow/models/workspace/training_demo/images/test -l C:/wd_hga_process/TensorFlow/models/workspace/training_demo/annotations/label_map.pbtxt -o C:/wd_hga_process/TensorFlow/models/workspace/training_demo/annotations/test.record

=== ham get image ===
ros2 launch realsense2_camera rs_launch.py
ros2 run wd_hga_process wd_cam   # for save rgb_detect.png
ros2 run wd_hga_process wd_detector  # copy rgb_detect.png to rgb_detect2.png and detect
**  /home/cmit/dev_ws/ham_image  **

=== monitor ===
https://askubuntu.com/questions/453109/add-fake-display-when-no-monitor-is-plugged-in

=== notebook ===


=== ros2 ===
ros2 pkg create --build-type ament_cmake ament_python --node-name my_node my_package
ros2 pkg create --build-type ament_cmake --node-name pc2_process pc_handle
colcon build --symlink-install --packages-select wd_hga_process
colcon build --symlink-install --packages-select pc_handle
colcon build --symlink-install --packages-select imu_tools

=== terminal ===
. install/local_setup.sh
python3 -m uvicorn wd_webserver:app --reload --host 0.0.0.0
python3 ~/dev_ws/src/wd_hga_process/wd_hga_process/btncall_gui.py
ros2 run wd_hga_process wd_mir
ros2 topic echo /mir/robot_state
ros2 topic echo /mir/btn_call
ros2 topic pub /mir/btn_call std_msgs/String "data: 5"
ros2 run pc_handle pc2_process

roslaunch warehouse_simulation warehouse_navigation.launch map_file:=/home/probook/catkin_ws/src/maps/warehouse_gmapping.yaml

  <node pkg="tf" type="static_transform_publisher" name="map_base_publisher" args="0 0 0 0 0 0 1  map base_footprint  100"/>
  <node pkg="tf" type="static_transform_publisher" name="base_odom_publisher" args="0 0 0 0 0 0 1  base_footprint odom  100"/>

=== Mir Wifi Password ===
mirex4you
=== Find robot ip address ===
ifconfig
nmap -sP 192.168.12.0/24

=== Server on ===
python -m uvicorn wd_rest_server:app --reload --host 0.0.0.0
python -m uvicorn wd_webserver:app --reload --host 0.0.0.0


=== REST API ===
curl -X GET "http://192.168.12.20/api/v2.0.0/registers" -H  "accept: application/json" -H  "Authorization: Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==" -H  "Accept-Language: en_US"

curl -X POST "http://192.168.12.20/api/v2.0.0/robots" -H  "accept: application/json" -H  "Authorization: Basic YWRtaW46OGM2OTc2ZTViNTQxMDQxNWJkZTkwOGJkNGRlZTE1ZGZiMTY3YTljODczZmM0YmI4YTgxZjZmMmFiNDQ4YTkxOA==" -H  "Accept-Language: en_US" -H  "Content-Type: application/json" -d "{  \"robots\": [    {}  ]}"

[{
	"url": "/v2.0.0/missions/8e7f9944-ba8a-11ec-b20b-0001299a3e90",
	"guid": "8e7f9944-ba8a-11ec-b20b-0001299a3e90",
	"name": "circle_1"
}, {
	"url": "/v2.0.0/missions/be4da03e-c876-11ec-8696-0001299a3e90",
	"guid": "be4da03e-c876-11ec-8696-0001299a3e90",
	"name": "GoTo_Pos_1"
}, {
	"url": "/v2.0.0/missions/d9dc1dba-c876-11ec-8696-0001299a3e90",
	"guid": "d9dc1dba-c876-11ec-8696-0001299a3e90",
	"name": "GoTo_Pos_2"
}, {
	"url": "/v2.0.0/missions/ea86df57-c876-11ec-8696-0001299a3e90",
	"guid": "ea86df57-c876-11ec-8696-0001299a3e90",
	"name": "GoTo_Pos_3"
}]




UR control node

1. ใช้ python ส่งคำสั่ง URScript
   - ควบคุมหุ่นยนต์ได้
   - อ่านค่า robot status ไม่ได้ [https://forum.universal-robots.com/t/decode-return-value/18631]
   - ยังคุยกับ gripper ไม่ได้
2. ใช้ library ใน github ชื่อ python-urx [https://github.com/SintefManufacturing/python-urx]
   - ควบคุมหุ่นยนต์ได้
   - อ่านค่าได้
   - ควบคุม gripper ได้
   - แต่ใช้ไปสักพักก็จะ error และต้อง reconnect 4-5 ครั้ง ถึงจะเชื่อมต่อได้ใหม่
3. ใช้ MoveIt! ของ ROS2
   - อ่านค่าได้
   - ควบคุม UR, Gripper ยังไม่ได้
   - ใช้ไปสักพักก็จะ error
   
