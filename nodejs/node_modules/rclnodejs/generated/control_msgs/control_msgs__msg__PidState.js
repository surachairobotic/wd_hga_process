// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const HeaderWrapper = require('../../generated/std_msgs/std_msgs__msg__Header.js');
const DurationWrapper = require('../../generated/builtin_interfaces/builtin_interfaces__msg__Duration.js');
const PidStateRefStruct = StructType({
  header: HeaderWrapper.refObjectType,
  timestep: DurationWrapper.refObjectType,
  error: primitiveTypes.float64,
  error_dot: primitiveTypes.float64,
  p_error: primitiveTypes.float64,
  i_error: primitiveTypes.float64,
  d_error: primitiveTypes.float64,
  p_term: primitiveTypes.float64,
  i_term: primitiveTypes.float64,
  d_term: primitiveTypes.float64,
  i_max: primitiveTypes.float64,
  i_min: primitiveTypes.float64,
  output: primitiveTypes.float64,
});
const PidStateRefArray = ArrayType(PidStateRefStruct);
const PidStateRefStructArray = StructType({
  data: PidStateRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class PidStateWrapper {
  constructor(other) {
    this._wrapperFields = {};
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new PidStateRefStruct(other._refObject.toObject());
      this._wrapperFields.header =  new HeaderWrapper(other._wrapperFields.header);
      this._wrapperFields.timestep =  new DurationWrapper(other._wrapperFields.timestep);
      this._errorIntialized = true;
      this._error_dotIntialized = true;
      this._p_errorIntialized = true;
      this._i_errorIntialized = true;
      this._d_errorIntialized = true;
      this._p_termIntialized = true;
      this._i_termIntialized = true;
      this._d_termIntialized = true;
      this._i_maxIntialized = true;
      this._i_minIntialized = true;
      this._outputIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new PidStateRefStruct();
    this._wrapperFields.header = new HeaderWrapper();
    this._wrapperFields.timestep = new DurationWrapper();
    this._errorIntialized = false;
    this._error_dotIntialized = false;
    this._p_errorIntialized = false;
    this._i_errorIntialized = false;
    this._d_errorIntialized = false;
    this._p_termIntialized = false;
    this._i_termIntialized = false;
    this._d_termIntialized = false;
    this._i_maxIntialized = false;
    this._i_minIntialized = false;
    this._outputIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new PidStateWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new PidStateArrayWrapper;
  }
  static get ArrayType() {
    return PidStateArrayWrapper;
  }
  static get refObjectArrayType() {
    return PidStateRefStructArray
  }
  static get refObjectType() {
    return PidStateRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
    if (checkConsistency) {
      if (!this._errorIntialized) {
        throw new TypeError('Invalid argument: error in PidState');
      }
      if (!this._error_dotIntialized) {
        throw new TypeError('Invalid argument: error_dot in PidState');
      }
      if (!this._p_errorIntialized) {
        throw new TypeError('Invalid argument: p_error in PidState');
      }
      if (!this._i_errorIntialized) {
        throw new TypeError('Invalid argument: i_error in PidState');
      }
      if (!this._d_errorIntialized) {
        throw new TypeError('Invalid argument: d_error in PidState');
      }
      if (!this._p_termIntialized) {
        throw new TypeError('Invalid argument: p_term in PidState');
      }
      if (!this._i_termIntialized) {
        throw new TypeError('Invalid argument: i_term in PidState');
      }
      if (!this._d_termIntialized) {
        throw new TypeError('Invalid argument: d_term in PidState');
      }
      if (!this._i_maxIntialized) {
        throw new TypeError('Invalid argument: i_max in PidState');
      }
      if (!this._i_minIntialized) {
        throw new TypeError('Invalid argument: i_min in PidState');
      }
      if (!this._outputIntialized) {
        throw new TypeError('Invalid argument: output in PidState');
      }
    }
    this._wrapperFields.header.freeze(own, checkConsistency);
    this._refObject.header = this._wrapperFields.header.refObject;
    this._wrapperFields.timestep.freeze(own, checkConsistency);
    this._refObject.timestep = this._wrapperFields.timestep.refObject;
  }
  serialize() {
    this.freeze(false, true);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._wrapperFields.header.copyRefObject(refObject.header);
    this._wrapperFields.timestep.copyRefObject(refObject.timestep);
    this._errorIntialized = true;
    this._refObject.error = refObject.error;
    this._error_dotIntialized = true;
    this._refObject.error_dot = refObject.error_dot;
    this._p_errorIntialized = true;
    this._refObject.p_error = refObject.p_error;
    this._i_errorIntialized = true;
    this._refObject.i_error = refObject.i_error;
    this._d_errorIntialized = true;
    this._refObject.d_error = refObject.d_error;
    this._p_termIntialized = true;
    this._refObject.p_term = refObject.p_term;
    this._i_termIntialized = true;
    this._refObject.i_term = refObject.i_term;
    this._d_termIntialized = true;
    this._refObject.d_term = refObject.d_term;
    this._i_maxIntialized = true;
    this._refObject.i_max = refObject.i_max;
    this._i_minIntialized = true;
    this._refObject.i_min = refObject.i_min;
    this._outputIntialized = true;
    this._refObject.output = refObject.output;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
    HeaderWrapper.freeStruct(refObject.header);
    DurationWrapper.freeStruct(refObject.timestep);
  }
  static destoryRawROS(msg) {
    PidStateWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'control_msgs', subFolder: 'msg', interfaceName: 'PidState'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get header() {
    return this._wrapperFields.header;
  }
  set header(value) {
    if (value instanceof HeaderWrapper) {
      this._wrapperFields.header.copy(value);
    } else {
      this._wrapperFields.header.copy(new HeaderWrapper(value));
    }
  }
  get timestep() {
    return this._wrapperFields.timestep;
  }
  set timestep(value) {
    if (value instanceof DurationWrapper) {
      this._wrapperFields.timestep.copy(value);
    } else {
      this._wrapperFields.timestep.copy(new DurationWrapper(value));
    }
  }
  get error() {
    if (!this._errorIntialized) {
      return undefined;
    }
    return this._refObject.error;
  }
  set error(value) {
    this._errorIntialized = true;
    this._refObject.error = value;
  }
  get error_dot() {
    if (!this._error_dotIntialized) {
      return undefined;
    }
    return this._refObject.error_dot;
  }
  set error_dot(value) {
    this._error_dotIntialized = true;
    this._refObject.error_dot = value;
  }
  get p_error() {
    if (!this._p_errorIntialized) {
      return undefined;
    }
    return this._refObject.p_error;
  }
  set p_error(value) {
    this._p_errorIntialized = true;
    this._refObject.p_error = value;
  }
  get i_error() {
    if (!this._i_errorIntialized) {
      return undefined;
    }
    return this._refObject.i_error;
  }
  set i_error(value) {
    this._i_errorIntialized = true;
    this._refObject.i_error = value;
  }
  get d_error() {
    if (!this._d_errorIntialized) {
      return undefined;
    }
    return this._refObject.d_error;
  }
  set d_error(value) {
    this._d_errorIntialized = true;
    this._refObject.d_error = value;
  }
  get p_term() {
    if (!this._p_termIntialized) {
      return undefined;
    }
    return this._refObject.p_term;
  }
  set p_term(value) {
    this._p_termIntialized = true;
    this._refObject.p_term = value;
  }
  get i_term() {
    if (!this._i_termIntialized) {
      return undefined;
    }
    return this._refObject.i_term;
  }
  set i_term(value) {
    this._i_termIntialized = true;
    this._refObject.i_term = value;
  }
  get d_term() {
    if (!this._d_termIntialized) {
      return undefined;
    }
    return this._refObject.d_term;
  }
  set d_term(value) {
    this._d_termIntialized = true;
    this._refObject.d_term = value;
  }
  get i_max() {
    if (!this._i_maxIntialized) {
      return undefined;
    }
    return this._refObject.i_max;
  }
  set i_max(value) {
    this._i_maxIntialized = true;
    this._refObject.i_max = value;
  }
  get i_min() {
    if (!this._i_minIntialized) {
      return undefined;
    }
    return this._refObject.i_min;
  }
  set i_min(value) {
    this._i_minIntialized = true;
    this._refObject.i_min = value;
  }
  get output() {
    if (!this._outputIntialized) {
      return undefined;
    }
    return this._refObject.output;
  }
  set output(value) {
    this._outputIntialized = true;
    this._refObject.output = value;
  }
  copyRefObject(refObject) {
    this._refObject = new PidStateRefStruct(refObject.toObject());
    this._wrapperFields.header.copyRefObject(this._refObject.header);
    this._wrapperFields.timestep.copyRefObject(this._refObject.timestep);
    this._errorIntialized = true;
    this._error_dotIntialized = true;
    this._p_errorIntialized = true;
    this._i_errorIntialized = true;
    this._d_errorIntialized = true;
    this._p_termIntialized = true;
    this._i_termIntialized = true;
    this._d_termIntialized = true;
    this._i_maxIntialized = true;
    this._i_minIntialized = true;
    this._outputIntialized = true;
  }
  copy(other) {
    this._refObject = new PidStateRefStruct(other._refObject.toObject());
    this._wrapperFields.header.copy(other._wrapperFields.header);
    this._wrapperFields.timestep.copy(other._wrapperFields.timestep);
    this._errorIntialized = true;
    this._error_dotIntialized = true;
    this._p_errorIntialized = true;
    this._i_errorIntialized = true;
    this._d_errorIntialized = true;
    this._p_termIntialized = true;
    this._i_termIntialized = true;
    this._d_termIntialized = true;
    this._i_maxIntialized = true;
    this._i_minIntialized = true;
    this._outputIntialized = true;
  }
  static get classType() {
    return PidStateWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"header","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"std_msgs","type":"Header","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"timestep","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"builtin_interfaces","type":"Duration","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"error","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"error_dot","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"p_error","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"i_error","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"d_error","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"p_term","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"i_term","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"d_term","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"i_max","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"i_min","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"output","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"control_msgs","type":"PidState","stringUpperBound":null,"isPrimitiveType":false},"msgName":"PidState"};
  }
  hasMember(name) {
    let memberNames = ["header","timestep","error","error_dot","p_error","i_error","d_error","p_term","i_term","d_term","i_max","i_min","output"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class PidStateArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof PidStateWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new PidStateWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to PidStateArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to PidStateArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new PidStateRefArray(size);
    this._refObject = new PidStateRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new PidStateWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof PidStateArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "PidStateArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      PidStateWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return PidStateWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return PidStateArrayWrapper;
  }
}
module.exports = PidStateWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "header",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "std_msgs",
        "type": "Header",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "timestep",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "builtin_interfaces",
        "type": "Duration",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "error",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "error_dot",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "p_error",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "i_error",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "d_error",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "p_term",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "i_term",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "d_term",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "i_max",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "i_min",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "output",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "control_msgs",
    "type": "PidState",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "PidState"
}
*/
