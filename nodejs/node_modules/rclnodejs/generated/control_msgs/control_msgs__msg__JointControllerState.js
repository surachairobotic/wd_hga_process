// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const HeaderWrapper = require('../../generated/std_msgs/std_msgs__msg__Header.js');
const JointControllerStateRefStruct = StructType({
  header: HeaderWrapper.refObjectType,
  set_point: primitiveTypes.float64,
  process_value: primitiveTypes.float64,
  process_value_dot: primitiveTypes.float64,
  error: primitiveTypes.float64,
  time_step: primitiveTypes.float64,
  command: primitiveTypes.float64,
  p: primitiveTypes.float64,
  i: primitiveTypes.float64,
  d: primitiveTypes.float64,
  i_clamp: primitiveTypes.float64,
  antiwindup: primitiveTypes.bool,
});
const JointControllerStateRefArray = ArrayType(JointControllerStateRefStruct);
const JointControllerStateRefStructArray = StructType({
  data: JointControllerStateRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class JointControllerStateWrapper {
  constructor(other) {
    this._wrapperFields = {};
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new JointControllerStateRefStruct(other._refObject.toObject());
      this._wrapperFields.header =  new HeaderWrapper(other._wrapperFields.header);
      this._set_pointIntialized = true;
      this._process_valueIntialized = true;
      this._process_value_dotIntialized = true;
      this._errorIntialized = true;
      this._time_stepIntialized = true;
      this._commandIntialized = true;
      this._pIntialized = true;
      this._iIntialized = true;
      this._dIntialized = true;
      this._i_clampIntialized = true;
      this._antiwindupIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new JointControllerStateRefStruct();
    this._wrapperFields.header = new HeaderWrapper();
    this._set_pointIntialized = false;
    this._process_valueIntialized = false;
    this._process_value_dotIntialized = false;
    this._errorIntialized = false;
    this._time_stepIntialized = false;
    this._commandIntialized = false;
    this._pIntialized = false;
    this._iIntialized = false;
    this._dIntialized = false;
    this._i_clampIntialized = false;
    this._antiwindupIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new JointControllerStateWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new JointControllerStateArrayWrapper;
  }
  static get ArrayType() {
    return JointControllerStateArrayWrapper;
  }
  static get refObjectArrayType() {
    return JointControllerStateRefStructArray
  }
  static get refObjectType() {
    return JointControllerStateRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
    if (checkConsistency) {
      if (!this._set_pointIntialized) {
        throw new TypeError('Invalid argument: set_point in JointControllerState');
      }
      if (!this._process_valueIntialized) {
        throw new TypeError('Invalid argument: process_value in JointControllerState');
      }
      if (!this._process_value_dotIntialized) {
        throw new TypeError('Invalid argument: process_value_dot in JointControllerState');
      }
      if (!this._errorIntialized) {
        throw new TypeError('Invalid argument: error in JointControllerState');
      }
      if (!this._time_stepIntialized) {
        throw new TypeError('Invalid argument: time_step in JointControllerState');
      }
      if (!this._commandIntialized) {
        throw new TypeError('Invalid argument: command in JointControllerState');
      }
      if (!this._pIntialized) {
        throw new TypeError('Invalid argument: p in JointControllerState');
      }
      if (!this._iIntialized) {
        throw new TypeError('Invalid argument: i in JointControllerState');
      }
      if (!this._dIntialized) {
        throw new TypeError('Invalid argument: d in JointControllerState');
      }
      if (!this._i_clampIntialized) {
        throw new TypeError('Invalid argument: i_clamp in JointControllerState');
      }
      if (!this._antiwindupIntialized) {
        throw new TypeError('Invalid argument: antiwindup in JointControllerState');
      }
    }
    this._wrapperFields.header.freeze(own, checkConsistency);
    this._refObject.header = this._wrapperFields.header.refObject;
  }
  serialize() {
    this.freeze(false, true);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._wrapperFields.header.copyRefObject(refObject.header);
    this._set_pointIntialized = true;
    this._refObject.set_point = refObject.set_point;
    this._process_valueIntialized = true;
    this._refObject.process_value = refObject.process_value;
    this._process_value_dotIntialized = true;
    this._refObject.process_value_dot = refObject.process_value_dot;
    this._errorIntialized = true;
    this._refObject.error = refObject.error;
    this._time_stepIntialized = true;
    this._refObject.time_step = refObject.time_step;
    this._commandIntialized = true;
    this._refObject.command = refObject.command;
    this._pIntialized = true;
    this._refObject.p = refObject.p;
    this._iIntialized = true;
    this._refObject.i = refObject.i;
    this._dIntialized = true;
    this._refObject.d = refObject.d;
    this._i_clampIntialized = true;
    this._refObject.i_clamp = refObject.i_clamp;
    this._antiwindupIntialized = true;
    this._refObject.antiwindup = refObject.antiwindup;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
    HeaderWrapper.freeStruct(refObject.header);
  }
  static destoryRawROS(msg) {
    JointControllerStateWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'control_msgs', subFolder: 'msg', interfaceName: 'JointControllerState'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get header() {
    return this._wrapperFields.header;
  }
  set header(value) {
    if (value instanceof HeaderWrapper) {
      this._wrapperFields.header.copy(value);
    } else {
      this._wrapperFields.header.copy(new HeaderWrapper(value));
    }
  }
  get set_point() {
    if (!this._set_pointIntialized) {
      return undefined;
    }
    return this._refObject.set_point;
  }
  set set_point(value) {
    this._set_pointIntialized = true;
    this._refObject.set_point = value;
  }
  get process_value() {
    if (!this._process_valueIntialized) {
      return undefined;
    }
    return this._refObject.process_value;
  }
  set process_value(value) {
    this._process_valueIntialized = true;
    this._refObject.process_value = value;
  }
  get process_value_dot() {
    if (!this._process_value_dotIntialized) {
      return undefined;
    }
    return this._refObject.process_value_dot;
  }
  set process_value_dot(value) {
    this._process_value_dotIntialized = true;
    this._refObject.process_value_dot = value;
  }
  get error() {
    if (!this._errorIntialized) {
      return undefined;
    }
    return this._refObject.error;
  }
  set error(value) {
    this._errorIntialized = true;
    this._refObject.error = value;
  }
  get time_step() {
    if (!this._time_stepIntialized) {
      return undefined;
    }
    return this._refObject.time_step;
  }
  set time_step(value) {
    this._time_stepIntialized = true;
    this._refObject.time_step = value;
  }
  get command() {
    if (!this._commandIntialized) {
      return undefined;
    }
    return this._refObject.command;
  }
  set command(value) {
    this._commandIntialized = true;
    this._refObject.command = value;
  }
  get p() {
    if (!this._pIntialized) {
      return undefined;
    }
    return this._refObject.p;
  }
  set p(value) {
    this._pIntialized = true;
    this._refObject.p = value;
  }
  get i() {
    if (!this._iIntialized) {
      return undefined;
    }
    return this._refObject.i;
  }
  set i(value) {
    this._iIntialized = true;
    this._refObject.i = value;
  }
  get d() {
    if (!this._dIntialized) {
      return undefined;
    }
    return this._refObject.d;
  }
  set d(value) {
    this._dIntialized = true;
    this._refObject.d = value;
  }
  get i_clamp() {
    if (!this._i_clampIntialized) {
      return undefined;
    }
    return this._refObject.i_clamp;
  }
  set i_clamp(value) {
    this._i_clampIntialized = true;
    this._refObject.i_clamp = value;
  }
  get antiwindup() {
    if (!this._antiwindupIntialized) {
      return undefined;
    }
    return this._refObject.antiwindup;
  }
  set antiwindup(value) {
    this._antiwindupIntialized = true;
    this._refObject.antiwindup = value;
  }
  copyRefObject(refObject) {
    this._refObject = new JointControllerStateRefStruct(refObject.toObject());
    this._wrapperFields.header.copyRefObject(this._refObject.header);
    this._set_pointIntialized = true;
    this._process_valueIntialized = true;
    this._process_value_dotIntialized = true;
    this._errorIntialized = true;
    this._time_stepIntialized = true;
    this._commandIntialized = true;
    this._pIntialized = true;
    this._iIntialized = true;
    this._dIntialized = true;
    this._i_clampIntialized = true;
    this._antiwindupIntialized = true;
  }
  copy(other) {
    this._refObject = new JointControllerStateRefStruct(other._refObject.toObject());
    this._wrapperFields.header.copy(other._wrapperFields.header);
    this._set_pointIntialized = true;
    this._process_valueIntialized = true;
    this._process_value_dotIntialized = true;
    this._errorIntialized = true;
    this._time_stepIntialized = true;
    this._commandIntialized = true;
    this._pIntialized = true;
    this._iIntialized = true;
    this._dIntialized = true;
    this._i_clampIntialized = true;
    this._antiwindupIntialized = true;
  }
  static get classType() {
    return JointControllerStateWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"header","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"std_msgs","type":"Header","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"set_point","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"process_value","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"process_value_dot","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"error","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"time_step","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"command","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"p","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"i","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"d","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"i_clamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"antiwindup","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"control_msgs","type":"JointControllerState","stringUpperBound":null,"isPrimitiveType":false},"msgName":"JointControllerState"};
  }
  hasMember(name) {
    let memberNames = ["header","set_point","process_value","process_value_dot","error","time_step","command","p","i","d","i_clamp","antiwindup"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class JointControllerStateArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof JointControllerStateWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new JointControllerStateWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to JointControllerStateArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to JointControllerStateArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new JointControllerStateRefArray(size);
    this._refObject = new JointControllerStateRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new JointControllerStateWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof JointControllerStateArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "JointControllerStateArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      JointControllerStateWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return JointControllerStateWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return JointControllerStateArrayWrapper;
  }
}
module.exports = JointControllerStateWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "header",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "std_msgs",
        "type": "Header",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "set_point",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "process_value",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "process_value_dot",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "error",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "time_step",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "command",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "p",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "i",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "d",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "i_clamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "antiwindup",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "control_msgs",
    "type": "JointControllerState",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "JointControllerState"
}
*/
