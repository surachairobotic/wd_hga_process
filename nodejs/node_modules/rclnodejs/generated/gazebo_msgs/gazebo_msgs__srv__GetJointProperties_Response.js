// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const Float64Wrapper = require('../../generated/std_msgs/std_msgs__msg__Float64.js');
const StringWrapper = require('../../generated/std_msgs/std_msgs__msg__String.js');
const GetJointProperties_ResponseRefStruct = StructType({
  type: primitiveTypes.uint8,
  damping: Float64Wrapper.refObjectArrayType,
  position: Float64Wrapper.refObjectArrayType,
  rate: Float64Wrapper.refObjectArrayType,
  success: primitiveTypes.bool,
  status_message: primitiveTypes.string,
});
const GetJointProperties_ResponseRefArray = ArrayType(GetJointProperties_ResponseRefStruct);
const GetJointProperties_ResponseRefStructArray = StructType({
  data: GetJointProperties_ResponseRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class GetJointProperties_ResponseWrapper {
  constructor(other) {
    this._wrapperFields = {};
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new GetJointProperties_ResponseRefStruct(other._refObject.toObject());
      this._typeIntialized = true;
      this._wrapperFields.damping = Float64Wrapper.createArray();
      this._wrapperFields.damping.copy(other._wrapperFields.damping);
      this._wrapperFields.position = Float64Wrapper.createArray();
      this._wrapperFields.position.copy(other._wrapperFields.position);
      this._wrapperFields.rate = Float64Wrapper.createArray();
      this._wrapperFields.rate.copy(other._wrapperFields.rate);
      this._successIntialized = true;
      this._status_messageIntialized = true;
      this._wrapperFields.status_message =  new StringWrapper(other._wrapperFields.status_message);
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new GetJointProperties_ResponseRefStruct();
    this._typeIntialized = false;
    this._wrapperFields.damping = Float64Wrapper.createArray();
    this._wrapperFields.position = Float64Wrapper.createArray();
    this._wrapperFields.rate = Float64Wrapper.createArray();
    this._successIntialized = false;
    this._status_messageIntialized = false;
    this._wrapperFields.status_message = new StringWrapper();
  }
  static createFromRefObject(refObject) {
    let self = new GetJointProperties_ResponseWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new GetJointProperties_ResponseArrayWrapper;
  }
  static get ArrayType() {
    return GetJointProperties_ResponseArrayWrapper;
  }
  static get refObjectArrayType() {
    return GetJointProperties_ResponseRefStructArray
  }
  static get refObjectType() {
    return GetJointProperties_ResponseRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
    if (checkConsistency) {
      if (!this._typeIntialized) {
        throw new TypeError('Invalid argument: type in GetJointProperties_Response');
      }
      if (!this._successIntialized) {
        throw new TypeError('Invalid argument: success in GetJointProperties_Response');
      }
      if (!this._status_messageIntialized) {
        throw new TypeError('Invalid argument: status_message in GetJointProperties_Response');
      }
    }
    this._wrapperFields.damping.freeze(own, checkConsistency);
    this._refObject.damping = this._wrapperFields.damping.refObject;
    if (own) {
      this._wrapperFields.damping.fill(Float64Array.from([]));
      this._wrapperFields.damping.freeze(own, checkConsistency);
      this._refObject.damping = this._wrapperFields.damping.refObject;
    }
    this._wrapperFields.position.freeze(own, checkConsistency);
    this._refObject.position = this._wrapperFields.position.refObject;
    if (own) {
      this._wrapperFields.position.fill(Float64Array.from([]));
      this._wrapperFields.position.freeze(own, checkConsistency);
      this._refObject.position = this._wrapperFields.position.refObject;
    }
    this._wrapperFields.rate.freeze(own, checkConsistency);
    this._refObject.rate = this._wrapperFields.rate.refObject;
    if (own) {
      this._wrapperFields.rate.fill(Float64Array.from([]));
      this._wrapperFields.rate.freeze(own, checkConsistency);
      this._refObject.rate = this._wrapperFields.rate.refObject;
    }
    if (own) {
      this._wrapperFields.status_message.freeze(own, checkConsistency);
    }
    this._refObject.status_message = this._wrapperFields.status_message.refObject;
  }
  serialize() {
    this.freeze(false, true);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._typeIntialized = true;
    this._refObject.type = refObject.type;
    this._wrapperFields.damping.copyRefObject(refObject.damping);
    this._wrapperFields.position.copyRefObject(refObject.position);
    this._wrapperFields.rate.copyRefObject(refObject.rate);
    this._successIntialized = true;
    this._refObject.success = refObject.success;
    this._status_messageIntialized = true;
    this._wrapperFields.status_message.data = refObject.status_message.data;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
    if (refObject.damping.size != 0) {
      Float64Wrapper.ArrayType.freeArray(refObject.damping);
      if (Float64Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.damping, Float64Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.position.size != 0) {
      Float64Wrapper.ArrayType.freeArray(refObject.position);
      if (Float64Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.position, Float64Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.rate.size != 0) {
      Float64Wrapper.ArrayType.freeArray(refObject.rate);
      if (Float64Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.rate, Float64Wrapper.refObjectArrayType, 'data');
      }
    }
    StringWrapper.freeStruct(refObject.status_message);
  }
  static destoryRawROS(msg) {
    GetJointProperties_ResponseWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'gazebo_msgs', subFolder: 'srv', interfaceName: 'GetJointProperties_Response'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get type() {
    if (!this._typeIntialized) {
      return undefined;
    }
    return this._refObject.type;
  }
  set type(value) {
    this._typeIntialized = true;
    this._refObject.type = value;
  }
  get damping() {
    return this._wrapperFields['damping'].data;
  }
  set damping(value) {
    this._wrapperFields['damping'].fill(value);
  }
  get position() {
    return this._wrapperFields['position'].data;
  }
  set position(value) {
    this._wrapperFields['position'].fill(value);
  }
  get rate() {
    return this._wrapperFields['rate'].data;
  }
  set rate(value) {
    this._wrapperFields['rate'].fill(value);
  }
  get success() {
    if (!this._successIntialized) {
      return undefined;
    }
    return this._refObject.success;
  }
  set success(value) {
    this._successIntialized = true;
    this._refObject.success = value;
  }
  get status_message() {
    if (!this._status_messageIntialized) {
      return undefined;
    }
    return this._wrapperFields.status_message.data;
  }
  set status_message(value) {
    this._status_messageIntialized = true;
    this._wrapperFields.status_message.data = value;
  }
  copyRefObject(refObject) {
    this._refObject = new GetJointProperties_ResponseRefStruct(refObject.toObject());
    this._typeIntialized = true;
    this._wrapperFields.damping.copyRefObject(this._refObject.damping);
    this._wrapperFields.position.copyRefObject(this._refObject.position);
    this._wrapperFields.rate.copyRefObject(this._refObject.rate);
    this._successIntialized = true;
    this._status_messageIntialized = true;
    this._wrapperFields.status_message.copyRefObject(this._refObject.status_message);
  }
  copy(other) {
    this._refObject = new GetJointProperties_ResponseRefStruct(other._refObject.toObject());
    this._typeIntialized = true;
    this._wrapperFields.damping.copy(other._wrapperFields.damping);
    this._wrapperFields.position.copy(other._wrapperFields.position);
    this._wrapperFields.rate.copy(other._wrapperFields.rate);
    this._successIntialized = true;
    this._status_messageIntialized = true;
    this._wrapperFields.status_message.copy(other._wrapperFields.status_message);
  }
  static get classType() {
    return GetJointProperties_ResponseWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[{"type":"uint8","name":"REVOLUTE","value":0},{"type":"uint8","name":"CONTINUOUS","value":1},{"type":"uint8","name":"PRISMATIC","value":2},{"type":"uint8","name":"FIXED","value":3},{"type":"uint8","name":"BALL","value":4},{"type":"uint8","name":"UNIVERSAL","value":5}],"fields":[{"name":"type","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"damping","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"position","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"rate","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"success","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"status_message","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"string","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"gazebo_msgs","type":"GetJointProperties_Response","stringUpperBound":null,"isPrimitiveType":false},"msgName":"GetJointProperties_Response"};
  }
  hasMember(name) {
    let memberNames = ["type","damping","position","rate","success","status_message"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class GetJointProperties_ResponseArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof GetJointProperties_ResponseWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new GetJointProperties_ResponseWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to GetJointProperties_ResponseArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to GetJointProperties_ResponseArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new GetJointProperties_ResponseRefArray(size);
    this._refObject = new GetJointProperties_ResponseRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new GetJointProperties_ResponseWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof GetJointProperties_ResponseArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "GetJointProperties_ResponseArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      GetJointProperties_ResponseWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return GetJointProperties_ResponseWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return GetJointProperties_ResponseArrayWrapper;
  }
}
// Define constants (6 in total)
Object.defineProperty(GetJointProperties_ResponseWrapper, "REVOLUTE", {value: 0, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GetJointProperties_ResponseWrapper, "CONTINUOUS", {value: 1, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GetJointProperties_ResponseWrapper, "PRISMATIC", {value: 2, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GetJointProperties_ResponseWrapper, "FIXED", {value: 3, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GetJointProperties_ResponseWrapper, "BALL", {value: 4, writable: false, enumerable: true, configurable: true});
Object.defineProperty(GetJointProperties_ResponseWrapper, "UNIVERSAL", {value: 5, writable: false, enumerable: true, configurable: true});
module.exports = GetJointProperties_ResponseWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [
    {
      "type": "uint8",
      "name": "REVOLUTE",
      "value": 0
    },
    {
      "type": "uint8",
      "name": "CONTINUOUS",
      "value": 1
    },
    {
      "type": "uint8",
      "name": "PRISMATIC",
      "value": 2
    },
    {
      "type": "uint8",
      "name": "FIXED",
      "value": 3
    },
    {
      "type": "uint8",
      "name": "BALL",
      "value": 4
    },
    {
      "type": "uint8",
      "name": "UNIVERSAL",
      "value": 5
    }
  ],
  "fields": [
    {
      "name": "type",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "damping",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "position",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "rate",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "success",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "status_message",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "string",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "gazebo_msgs",
    "type": "GetJointProperties_Response",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "GetJointProperties_Response"
}
*/
