// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const ODEPhysicsRefStruct = StructType({
  auto_disable_bodies: primitiveTypes.bool,
  sor_pgs_precon_iters: primitiveTypes.uint32,
  sor_pgs_iters: primitiveTypes.uint32,
  sor_pgs_w: primitiveTypes.float64,
  sor_pgs_rms_error_tol: primitiveTypes.float64,
  contact_surface_layer: primitiveTypes.float64,
  contact_max_correcting_vel: primitiveTypes.float64,
  cfm: primitiveTypes.float64,
  erp: primitiveTypes.float64,
  max_contacts: primitiveTypes.uint32,
});
const ODEPhysicsRefArray = ArrayType(ODEPhysicsRefStruct);
const ODEPhysicsRefStructArray = StructType({
  data: ODEPhysicsRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class ODEPhysicsWrapper {
  constructor(other) {
    this._wrapperFields = {};
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new ODEPhysicsRefStruct(other._refObject.toObject());
      this._auto_disable_bodiesIntialized = true;
      this._sor_pgs_precon_itersIntialized = true;
      this._sor_pgs_itersIntialized = true;
      this._sor_pgs_wIntialized = true;
      this._sor_pgs_rms_error_tolIntialized = true;
      this._contact_surface_layerIntialized = true;
      this._contact_max_correcting_velIntialized = true;
      this._cfmIntialized = true;
      this._erpIntialized = true;
      this._max_contactsIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new ODEPhysicsRefStruct();
    this._auto_disable_bodiesIntialized = false;
    this._sor_pgs_precon_itersIntialized = false;
    this._sor_pgs_itersIntialized = false;
    this._sor_pgs_wIntialized = false;
    this._sor_pgs_rms_error_tolIntialized = false;
    this._contact_surface_layerIntialized = false;
    this._contact_max_correcting_velIntialized = false;
    this._cfmIntialized = false;
    this._erpIntialized = false;
    this._max_contactsIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new ODEPhysicsWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new ODEPhysicsArrayWrapper;
  }
  static get ArrayType() {
    return ODEPhysicsArrayWrapper;
  }
  static get refObjectArrayType() {
    return ODEPhysicsRefStructArray
  }
  static get refObjectType() {
    return ODEPhysicsRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
    if (checkConsistency) {
      if (!this._auto_disable_bodiesIntialized) {
        throw new TypeError('Invalid argument: auto_disable_bodies in ODEPhysics');
      }
      if (!this._sor_pgs_precon_itersIntialized) {
        throw new TypeError('Invalid argument: sor_pgs_precon_iters in ODEPhysics');
      }
      if (!this._sor_pgs_itersIntialized) {
        throw new TypeError('Invalid argument: sor_pgs_iters in ODEPhysics');
      }
      if (!this._sor_pgs_wIntialized) {
        throw new TypeError('Invalid argument: sor_pgs_w in ODEPhysics');
      }
      if (!this._sor_pgs_rms_error_tolIntialized) {
        throw new TypeError('Invalid argument: sor_pgs_rms_error_tol in ODEPhysics');
      }
      if (!this._contact_surface_layerIntialized) {
        throw new TypeError('Invalid argument: contact_surface_layer in ODEPhysics');
      }
      if (!this._contact_max_correcting_velIntialized) {
        throw new TypeError('Invalid argument: contact_max_correcting_vel in ODEPhysics');
      }
      if (!this._cfmIntialized) {
        throw new TypeError('Invalid argument: cfm in ODEPhysics');
      }
      if (!this._erpIntialized) {
        throw new TypeError('Invalid argument: erp in ODEPhysics');
      }
      if (!this._max_contactsIntialized) {
        throw new TypeError('Invalid argument: max_contacts in ODEPhysics');
      }
    }
  }
  serialize() {
    this.freeze(false, true);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._auto_disable_bodiesIntialized = true;
    this._refObject.auto_disable_bodies = refObject.auto_disable_bodies;
    this._sor_pgs_precon_itersIntialized = true;
    this._refObject.sor_pgs_precon_iters = refObject.sor_pgs_precon_iters;
    this._sor_pgs_itersIntialized = true;
    this._refObject.sor_pgs_iters = refObject.sor_pgs_iters;
    this._sor_pgs_wIntialized = true;
    this._refObject.sor_pgs_w = refObject.sor_pgs_w;
    this._sor_pgs_rms_error_tolIntialized = true;
    this._refObject.sor_pgs_rms_error_tol = refObject.sor_pgs_rms_error_tol;
    this._contact_surface_layerIntialized = true;
    this._refObject.contact_surface_layer = refObject.contact_surface_layer;
    this._contact_max_correcting_velIntialized = true;
    this._refObject.contact_max_correcting_vel = refObject.contact_max_correcting_vel;
    this._cfmIntialized = true;
    this._refObject.cfm = refObject.cfm;
    this._erpIntialized = true;
    this._refObject.erp = refObject.erp;
    this._max_contactsIntialized = true;
    this._refObject.max_contacts = refObject.max_contacts;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
  }
  static destoryRawROS(msg) {
    ODEPhysicsWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'gazebo_msgs', subFolder: 'msg', interfaceName: 'ODEPhysics'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get auto_disable_bodies() {
    if (!this._auto_disable_bodiesIntialized) {
      return undefined;
    }
    return this._refObject.auto_disable_bodies;
  }
  set auto_disable_bodies(value) {
    this._auto_disable_bodiesIntialized = true;
    this._refObject.auto_disable_bodies = value;
  }
  get sor_pgs_precon_iters() {
    if (!this._sor_pgs_precon_itersIntialized) {
      return undefined;
    }
    return this._refObject.sor_pgs_precon_iters;
  }
  set sor_pgs_precon_iters(value) {
    this._sor_pgs_precon_itersIntialized = true;
    this._refObject.sor_pgs_precon_iters = value;
  }
  get sor_pgs_iters() {
    if (!this._sor_pgs_itersIntialized) {
      return undefined;
    }
    return this._refObject.sor_pgs_iters;
  }
  set sor_pgs_iters(value) {
    this._sor_pgs_itersIntialized = true;
    this._refObject.sor_pgs_iters = value;
  }
  get sor_pgs_w() {
    if (!this._sor_pgs_wIntialized) {
      return undefined;
    }
    return this._refObject.sor_pgs_w;
  }
  set sor_pgs_w(value) {
    this._sor_pgs_wIntialized = true;
    this._refObject.sor_pgs_w = value;
  }
  get sor_pgs_rms_error_tol() {
    if (!this._sor_pgs_rms_error_tolIntialized) {
      return undefined;
    }
    return this._refObject.sor_pgs_rms_error_tol;
  }
  set sor_pgs_rms_error_tol(value) {
    this._sor_pgs_rms_error_tolIntialized = true;
    this._refObject.sor_pgs_rms_error_tol = value;
  }
  get contact_surface_layer() {
    if (!this._contact_surface_layerIntialized) {
      return undefined;
    }
    return this._refObject.contact_surface_layer;
  }
  set contact_surface_layer(value) {
    this._contact_surface_layerIntialized = true;
    this._refObject.contact_surface_layer = value;
  }
  get contact_max_correcting_vel() {
    if (!this._contact_max_correcting_velIntialized) {
      return undefined;
    }
    return this._refObject.contact_max_correcting_vel;
  }
  set contact_max_correcting_vel(value) {
    this._contact_max_correcting_velIntialized = true;
    this._refObject.contact_max_correcting_vel = value;
  }
  get cfm() {
    if (!this._cfmIntialized) {
      return undefined;
    }
    return this._refObject.cfm;
  }
  set cfm(value) {
    this._cfmIntialized = true;
    this._refObject.cfm = value;
  }
  get erp() {
    if (!this._erpIntialized) {
      return undefined;
    }
    return this._refObject.erp;
  }
  set erp(value) {
    this._erpIntialized = true;
    this._refObject.erp = value;
  }
  get max_contacts() {
    if (!this._max_contactsIntialized) {
      return undefined;
    }
    return this._refObject.max_contacts;
  }
  set max_contacts(value) {
    this._max_contactsIntialized = true;
    this._refObject.max_contacts = value;
  }
  copyRefObject(refObject) {
    this._refObject = new ODEPhysicsRefStruct(refObject.toObject());
    this._auto_disable_bodiesIntialized = true;
    this._sor_pgs_precon_itersIntialized = true;
    this._sor_pgs_itersIntialized = true;
    this._sor_pgs_wIntialized = true;
    this._sor_pgs_rms_error_tolIntialized = true;
    this._contact_surface_layerIntialized = true;
    this._contact_max_correcting_velIntialized = true;
    this._cfmIntialized = true;
    this._erpIntialized = true;
    this._max_contactsIntialized = true;
  }
  copy(other) {
    this._refObject = new ODEPhysicsRefStruct(other._refObject.toObject());
    this._auto_disable_bodiesIntialized = true;
    this._sor_pgs_precon_itersIntialized = true;
    this._sor_pgs_itersIntialized = true;
    this._sor_pgs_wIntialized = true;
    this._sor_pgs_rms_error_tolIntialized = true;
    this._contact_surface_layerIntialized = true;
    this._contact_max_correcting_velIntialized = true;
    this._cfmIntialized = true;
    this._erpIntialized = true;
    this._max_contactsIntialized = true;
  }
  static get classType() {
    return ODEPhysicsWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"auto_disable_bodies","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"sor_pgs_precon_iters","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"sor_pgs_iters","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"sor_pgs_w","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"sor_pgs_rms_error_tol","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"contact_surface_layer","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"contact_max_correcting_vel","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"cfm","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"erp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"max_contacts","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"gazebo_msgs","type":"ODEPhysics","stringUpperBound":null,"isPrimitiveType":false},"msgName":"ODEPhysics"};
  }
  hasMember(name) {
    let memberNames = ["auto_disable_bodies","sor_pgs_precon_iters","sor_pgs_iters","sor_pgs_w","sor_pgs_rms_error_tol","contact_surface_layer","contact_max_correcting_vel","cfm","erp","max_contacts"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class ODEPhysicsArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof ODEPhysicsWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new ODEPhysicsWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to ODEPhysicsArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to ODEPhysicsArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new ODEPhysicsRefArray(size);
    this._refObject = new ODEPhysicsRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new ODEPhysicsWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof ODEPhysicsArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "ODEPhysicsArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      ODEPhysicsWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return ODEPhysicsWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return ODEPhysicsArrayWrapper;
  }
}
module.exports = ODEPhysicsWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "auto_disable_bodies",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "sor_pgs_precon_iters",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "sor_pgs_iters",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "sor_pgs_w",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "sor_pgs_rms_error_tol",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "contact_surface_layer",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "contact_max_correcting_vel",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "cfm",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "erp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "max_contacts",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "gazebo_msgs",
    "type": "ODEPhysics",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "ODEPhysics"
}
*/
