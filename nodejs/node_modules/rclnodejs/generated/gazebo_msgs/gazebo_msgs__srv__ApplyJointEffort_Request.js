// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const StringWrapper = require('../../generated/std_msgs/std_msgs__msg__String.js');
const TimeWrapper = require('../../generated/builtin_interfaces/builtin_interfaces__msg__Time.js');
const DurationWrapper = require('../../generated/builtin_interfaces/builtin_interfaces__msg__Duration.js');
const ApplyJointEffort_RequestRefStruct = StructType({
  joint_name: primitiveTypes.string,
  effort: primitiveTypes.float64,
  start_time: TimeWrapper.refObjectType,
  duration: DurationWrapper.refObjectType,
});
const ApplyJointEffort_RequestRefArray = ArrayType(ApplyJointEffort_RequestRefStruct);
const ApplyJointEffort_RequestRefStructArray = StructType({
  data: ApplyJointEffort_RequestRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class ApplyJointEffort_RequestWrapper {
  constructor(other) {
    this._wrapperFields = {};
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new ApplyJointEffort_RequestRefStruct(other._refObject.toObject());
      this._joint_nameIntialized = true;
      this._wrapperFields.joint_name =  new StringWrapper(other._wrapperFields.joint_name);
      this._effortIntialized = true;
      this._wrapperFields.start_time =  new TimeWrapper(other._wrapperFields.start_time);
      this._wrapperFields.duration =  new DurationWrapper(other._wrapperFields.duration);
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new ApplyJointEffort_RequestRefStruct();
    this._joint_nameIntialized = false;
    this._wrapperFields.joint_name = new StringWrapper();
    this._effortIntialized = false;
    this._wrapperFields.start_time = new TimeWrapper();
    this._wrapperFields.duration = new DurationWrapper();
  }
  static createFromRefObject(refObject) {
    let self = new ApplyJointEffort_RequestWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new ApplyJointEffort_RequestArrayWrapper;
  }
  static get ArrayType() {
    return ApplyJointEffort_RequestArrayWrapper;
  }
  static get refObjectArrayType() {
    return ApplyJointEffort_RequestRefStructArray
  }
  static get refObjectType() {
    return ApplyJointEffort_RequestRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
    if (checkConsistency) {
      if (!this._joint_nameIntialized) {
        throw new TypeError('Invalid argument: joint_name in ApplyJointEffort_Request');
      }
      if (!this._effortIntialized) {
        throw new TypeError('Invalid argument: effort in ApplyJointEffort_Request');
      }
    }
    if (own) {
      this._wrapperFields.joint_name.freeze(own, checkConsistency);
    }
    this._refObject.joint_name = this._wrapperFields.joint_name.refObject;
    this._wrapperFields.start_time.freeze(own, checkConsistency);
    this._refObject.start_time = this._wrapperFields.start_time.refObject;
    this._wrapperFields.duration.freeze(own, checkConsistency);
    this._refObject.duration = this._wrapperFields.duration.refObject;
  }
  serialize() {
    this.freeze(false, true);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._joint_nameIntialized = true;
    this._wrapperFields.joint_name.data = refObject.joint_name.data;
    this._effortIntialized = true;
    this._refObject.effort = refObject.effort;
    this._wrapperFields.start_time.copyRefObject(refObject.start_time);
    this._wrapperFields.duration.copyRefObject(refObject.duration);
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
    StringWrapper.freeStruct(refObject.joint_name);
    TimeWrapper.freeStruct(refObject.start_time);
    DurationWrapper.freeStruct(refObject.duration);
  }
  static destoryRawROS(msg) {
    ApplyJointEffort_RequestWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'gazebo_msgs', subFolder: 'srv', interfaceName: 'ApplyJointEffort_Request'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get joint_name() {
    if (!this._joint_nameIntialized) {
      return undefined;
    }
    return this._wrapperFields.joint_name.data;
  }
  set joint_name(value) {
    this._joint_nameIntialized = true;
    this._wrapperFields.joint_name.data = value;
  }
  get effort() {
    if (!this._effortIntialized) {
      return undefined;
    }
    return this._refObject.effort;
  }
  set effort(value) {
    this._effortIntialized = true;
    this._refObject.effort = value;
  }
  get start_time() {
    return this._wrapperFields.start_time;
  }
  set start_time(value) {
    if (value instanceof TimeWrapper) {
      this._wrapperFields.start_time.copy(value);
    } else {
      this._wrapperFields.start_time.copy(new TimeWrapper(value));
    }
  }
  get duration() {
    return this._wrapperFields.duration;
  }
  set duration(value) {
    if (value instanceof DurationWrapper) {
      this._wrapperFields.duration.copy(value);
    } else {
      this._wrapperFields.duration.copy(new DurationWrapper(value));
    }
  }
  copyRefObject(refObject) {
    this._refObject = new ApplyJointEffort_RequestRefStruct(refObject.toObject());
    this._joint_nameIntialized = true;
    this._wrapperFields.joint_name.copyRefObject(this._refObject.joint_name);
    this._effortIntialized = true;
    this._wrapperFields.start_time.copyRefObject(this._refObject.start_time);
    this._wrapperFields.duration.copyRefObject(this._refObject.duration);
  }
  copy(other) {
    this._refObject = new ApplyJointEffort_RequestRefStruct(other._refObject.toObject());
    this._joint_nameIntialized = true;
    this._wrapperFields.joint_name.copy(other._wrapperFields.joint_name);
    this._effortIntialized = true;
    this._wrapperFields.start_time.copy(other._wrapperFields.start_time);
    this._wrapperFields.duration.copy(other._wrapperFields.duration);
  }
  static get classType() {
    return ApplyJointEffort_RequestWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"joint_name","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"string","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"effort","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"start_time","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"builtin_interfaces","type":"Time","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"duration","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"builtin_interfaces","type":"Duration","stringUpperBound":null,"isPrimitiveType":false},"default_value":null}],"baseType":{"pkgName":"gazebo_msgs","type":"ApplyJointEffort_Request","stringUpperBound":null,"isPrimitiveType":false},"msgName":"ApplyJointEffort_Request"};
  }
  hasMember(name) {
    let memberNames = ["joint_name","effort","start_time","duration"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class ApplyJointEffort_RequestArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof ApplyJointEffort_RequestWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new ApplyJointEffort_RequestWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to ApplyJointEffort_RequestArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to ApplyJointEffort_RequestArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new ApplyJointEffort_RequestRefArray(size);
    this._refObject = new ApplyJointEffort_RequestRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new ApplyJointEffort_RequestWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof ApplyJointEffort_RequestArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "ApplyJointEffort_RequestArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      ApplyJointEffort_RequestWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return ApplyJointEffort_RequestWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return ApplyJointEffort_RequestArrayWrapper;
  }
}
module.exports = ApplyJointEffort_RequestWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "joint_name",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "string",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "effort",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "start_time",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "builtin_interfaces",
        "type": "Time",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "duration",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "builtin_interfaces",
        "type": "Duration",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "gazebo_msgs",
    "type": "ApplyJointEffort_Request",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "ApplyJointEffort_Request"
}
*/
