// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const TimeWrapper = require('../../generated/builtin_interfaces/builtin_interfaces__msg__Time.js');
const JointCommandWrapper = require('../../generated/pendulum_msgs/pendulum_msgs__msg__JointCommand.js');
const JointStateWrapper = require('../../generated/pendulum_msgs/pendulum_msgs__msg__JointState.js');
const RttestResultsRefStruct = StructType({
  stamp: TimeWrapper.refObjectType,
  command: JointCommandWrapper.refObjectType,
  state: JointStateWrapper.refObjectType,
  cur_latency: primitiveTypes.uint64,
  mean_latency: primitiveTypes.float64,
  min_latency: primitiveTypes.uint64,
  max_latency: primitiveTypes.uint64,
  minor_pagefaults: primitiveTypes.uint64,
  major_pagefaults: primitiveTypes.uint64,
});
const RttestResultsRefArray = ArrayType(RttestResultsRefStruct);
const RttestResultsRefStructArray = StructType({
  data: RttestResultsRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class RttestResultsWrapper {
  constructor(other) {
    this._wrapperFields = {};
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new RttestResultsRefStruct(other._refObject.toObject());
      this._wrapperFields.stamp =  new TimeWrapper(other._wrapperFields.stamp);
      this._wrapperFields.command =  new JointCommandWrapper(other._wrapperFields.command);
      this._wrapperFields.state =  new JointStateWrapper(other._wrapperFields.state);
      this._cur_latencyIntialized = true;
      this._mean_latencyIntialized = true;
      this._min_latencyIntialized = true;
      this._max_latencyIntialized = true;
      this._minor_pagefaultsIntialized = true;
      this._major_pagefaultsIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new RttestResultsRefStruct();
    this._wrapperFields.stamp = new TimeWrapper();
    this._wrapperFields.command = new JointCommandWrapper();
    this._wrapperFields.state = new JointStateWrapper();
    this._cur_latencyIntialized = false;
    this._mean_latencyIntialized = false;
    this._min_latencyIntialized = false;
    this._max_latencyIntialized = false;
    this._minor_pagefaultsIntialized = false;
    this._major_pagefaultsIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new RttestResultsWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new RttestResultsArrayWrapper;
  }
  static get ArrayType() {
    return RttestResultsArrayWrapper;
  }
  static get refObjectArrayType() {
    return RttestResultsRefStructArray
  }
  static get refObjectType() {
    return RttestResultsRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
    if (checkConsistency) {
      if (!this._cur_latencyIntialized) {
        throw new TypeError('Invalid argument: cur_latency in RttestResults');
      }
      if (!this._mean_latencyIntialized) {
        throw new TypeError('Invalid argument: mean_latency in RttestResults');
      }
      if (!this._min_latencyIntialized) {
        throw new TypeError('Invalid argument: min_latency in RttestResults');
      }
      if (!this._max_latencyIntialized) {
        throw new TypeError('Invalid argument: max_latency in RttestResults');
      }
      if (!this._minor_pagefaultsIntialized) {
        throw new TypeError('Invalid argument: minor_pagefaults in RttestResults');
      }
      if (!this._major_pagefaultsIntialized) {
        throw new TypeError('Invalid argument: major_pagefaults in RttestResults');
      }
    }
    this._wrapperFields.stamp.freeze(own, checkConsistency);
    this._refObject.stamp = this._wrapperFields.stamp.refObject;
    this._wrapperFields.command.freeze(own, checkConsistency);
    this._refObject.command = this._wrapperFields.command.refObject;
    this._wrapperFields.state.freeze(own, checkConsistency);
    this._refObject.state = this._wrapperFields.state.refObject;
  }
  serialize() {
    this.freeze(false, true);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._wrapperFields.stamp.copyRefObject(refObject.stamp);
    this._wrapperFields.command.copyRefObject(refObject.command);
    this._wrapperFields.state.copyRefObject(refObject.state);
    this._cur_latencyIntialized = true;
    this._refObject.cur_latency = refObject.cur_latency;
    this._mean_latencyIntialized = true;
    this._refObject.mean_latency = refObject.mean_latency;
    this._min_latencyIntialized = true;
    this._refObject.min_latency = refObject.min_latency;
    this._max_latencyIntialized = true;
    this._refObject.max_latency = refObject.max_latency;
    this._minor_pagefaultsIntialized = true;
    this._refObject.minor_pagefaults = refObject.minor_pagefaults;
    this._major_pagefaultsIntialized = true;
    this._refObject.major_pagefaults = refObject.major_pagefaults;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
    TimeWrapper.freeStruct(refObject.stamp);
    JointCommandWrapper.freeStruct(refObject.command);
    JointStateWrapper.freeStruct(refObject.state);
  }
  static destoryRawROS(msg) {
    RttestResultsWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'pendulum_msgs', subFolder: 'msg', interfaceName: 'RttestResults'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get stamp() {
    return this._wrapperFields.stamp;
  }
  set stamp(value) {
    if (value instanceof TimeWrapper) {
      this._wrapperFields.stamp.copy(value);
    } else {
      this._wrapperFields.stamp.copy(new TimeWrapper(value));
    }
  }
  get command() {
    return this._wrapperFields.command;
  }
  set command(value) {
    if (value instanceof JointCommandWrapper) {
      this._wrapperFields.command.copy(value);
    } else {
      this._wrapperFields.command.copy(new JointCommandWrapper(value));
    }
  }
  get state() {
    return this._wrapperFields.state;
  }
  set state(value) {
    if (value instanceof JointStateWrapper) {
      this._wrapperFields.state.copy(value);
    } else {
      this._wrapperFields.state.copy(new JointStateWrapper(value));
    }
  }
  get cur_latency() {
    if (!this._cur_latencyIntialized) {
      return undefined;
    }
    return this._refObject.cur_latency;
  }
  set cur_latency(value) {
    this._cur_latencyIntialized = true;
    this._refObject.cur_latency = value;
  }
  get mean_latency() {
    if (!this._mean_latencyIntialized) {
      return undefined;
    }
    return this._refObject.mean_latency;
  }
  set mean_latency(value) {
    this._mean_latencyIntialized = true;
    this._refObject.mean_latency = value;
  }
  get min_latency() {
    if (!this._min_latencyIntialized) {
      return undefined;
    }
    return this._refObject.min_latency;
  }
  set min_latency(value) {
    this._min_latencyIntialized = true;
    this._refObject.min_latency = value;
  }
  get max_latency() {
    if (!this._max_latencyIntialized) {
      return undefined;
    }
    return this._refObject.max_latency;
  }
  set max_latency(value) {
    this._max_latencyIntialized = true;
    this._refObject.max_latency = value;
  }
  get minor_pagefaults() {
    if (!this._minor_pagefaultsIntialized) {
      return undefined;
    }
    return this._refObject.minor_pagefaults;
  }
  set minor_pagefaults(value) {
    this._minor_pagefaultsIntialized = true;
    this._refObject.minor_pagefaults = value;
  }
  get major_pagefaults() {
    if (!this._major_pagefaultsIntialized) {
      return undefined;
    }
    return this._refObject.major_pagefaults;
  }
  set major_pagefaults(value) {
    this._major_pagefaultsIntialized = true;
    this._refObject.major_pagefaults = value;
  }
  copyRefObject(refObject) {
    this._refObject = new RttestResultsRefStruct(refObject.toObject());
    this._wrapperFields.stamp.copyRefObject(this._refObject.stamp);
    this._wrapperFields.command.copyRefObject(this._refObject.command);
    this._wrapperFields.state.copyRefObject(this._refObject.state);
    this._cur_latencyIntialized = true;
    this._mean_latencyIntialized = true;
    this._min_latencyIntialized = true;
    this._max_latencyIntialized = true;
    this._minor_pagefaultsIntialized = true;
    this._major_pagefaultsIntialized = true;
  }
  copy(other) {
    this._refObject = new RttestResultsRefStruct(other._refObject.toObject());
    this._wrapperFields.stamp.copy(other._wrapperFields.stamp);
    this._wrapperFields.command.copy(other._wrapperFields.command);
    this._wrapperFields.state.copy(other._wrapperFields.state);
    this._cur_latencyIntialized = true;
    this._mean_latencyIntialized = true;
    this._min_latencyIntialized = true;
    this._max_latencyIntialized = true;
    this._minor_pagefaultsIntialized = true;
    this._major_pagefaultsIntialized = true;
  }
  static get classType() {
    return RttestResultsWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"stamp","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"builtin_interfaces","type":"Time","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"command","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"pendulum_msgs","type":"JointCommand","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"state","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":"pendulum_msgs","type":"JointState","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"cur_latency","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"mean_latency","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"min_latency","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"max_latency","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"minor_pagefaults","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"major_pagefaults","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"pendulum_msgs","type":"RttestResults","stringUpperBound":null,"isPrimitiveType":false},"msgName":"RttestResults"};
  }
  hasMember(name) {
    let memberNames = ["stamp","command","state","cur_latency","mean_latency","min_latency","max_latency","minor_pagefaults","major_pagefaults"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class RttestResultsArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof RttestResultsWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new RttestResultsWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to RttestResultsArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to RttestResultsArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new RttestResultsRefArray(size);
    this._refObject = new RttestResultsRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new RttestResultsWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof RttestResultsArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "RttestResultsArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      RttestResultsWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return RttestResultsWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return RttestResultsArrayWrapper;
  }
}
module.exports = RttestResultsWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "stamp",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "builtin_interfaces",
        "type": "Time",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "command",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "pendulum_msgs",
        "type": "JointCommand",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "state",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": "pendulum_msgs",
        "type": "JointState",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "cur_latency",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "mean_latency",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "min_latency",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "max_latency",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "minor_pagefaults",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "major_pagefaults",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "pendulum_msgs",
    "type": "RttestResults",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "RttestResults"
}
*/
