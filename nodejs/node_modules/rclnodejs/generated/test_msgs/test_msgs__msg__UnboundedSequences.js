// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const BoolWrapper = require('../../generated/std_msgs/std_msgs__msg__Bool.js');
const ByteWrapper = require('../../generated/std_msgs/std_msgs__msg__Byte.js');
const CharWrapper = require('../../generated/std_msgs/std_msgs__msg__Char.js');
const Float32Wrapper = require('../../generated/std_msgs/std_msgs__msg__Float32.js');
const Float64Wrapper = require('../../generated/std_msgs/std_msgs__msg__Float64.js');
const Int8Wrapper = require('../../generated/std_msgs/std_msgs__msg__Int8.js');
const UInt8Wrapper = require('../../generated/std_msgs/std_msgs__msg__UInt8.js');
const Int16Wrapper = require('../../generated/std_msgs/std_msgs__msg__Int16.js');
const UInt16Wrapper = require('../../generated/std_msgs/std_msgs__msg__UInt16.js');
const Int32Wrapper = require('../../generated/std_msgs/std_msgs__msg__Int32.js');
const UInt32Wrapper = require('../../generated/std_msgs/std_msgs__msg__UInt32.js');
const Int64Wrapper = require('../../generated/std_msgs/std_msgs__msg__Int64.js');
const UInt64Wrapper = require('../../generated/std_msgs/std_msgs__msg__UInt64.js');
const StringWrapper = require('../../generated/std_msgs/std_msgs__msg__String.js');
const BasicTypesWrapper = require('../../generated/test_msgs/test_msgs__msg__BasicTypes.js');
const ConstantsWrapper = require('../../generated/test_msgs/test_msgs__msg__Constants.js');
const DefaultsWrapper = require('../../generated/test_msgs/test_msgs__msg__Defaults.js');
const UnboundedSequencesRefStruct = StructType({
  bool_values: BoolWrapper.refObjectArrayType,
  byte_values: ByteWrapper.refObjectArrayType,
  char_values: CharWrapper.refObjectArrayType,
  float32_values: Float32Wrapper.refObjectArrayType,
  float64_values: Float64Wrapper.refObjectArrayType,
  int8_values: Int8Wrapper.refObjectArrayType,
  uint8_values: UInt8Wrapper.refObjectArrayType,
  int16_values: Int16Wrapper.refObjectArrayType,
  uint16_values: UInt16Wrapper.refObjectArrayType,
  int32_values: Int32Wrapper.refObjectArrayType,
  uint32_values: UInt32Wrapper.refObjectArrayType,
  int64_values: Int64Wrapper.refObjectArrayType,
  uint64_values: UInt64Wrapper.refObjectArrayType,
  string_values: StringWrapper.refObjectArrayType,
  basic_types_values: BasicTypesWrapper.refObjectArrayType,
  constants_values: ConstantsWrapper.refObjectArrayType,
  defaults_values: DefaultsWrapper.refObjectArrayType,
  bool_values_default: BoolWrapper.refObjectArrayType,
  byte_values_default: ByteWrapper.refObjectArrayType,
  char_values_default: CharWrapper.refObjectArrayType,
  float32_values_default: Float32Wrapper.refObjectArrayType,
  float64_values_default: Float64Wrapper.refObjectArrayType,
  int8_values_default: Int8Wrapper.refObjectArrayType,
  uint8_values_default: UInt8Wrapper.refObjectArrayType,
  int16_values_default: Int16Wrapper.refObjectArrayType,
  uint16_values_default: UInt16Wrapper.refObjectArrayType,
  int32_values_default: Int32Wrapper.refObjectArrayType,
  uint32_values_default: UInt32Wrapper.refObjectArrayType,
  int64_values_default: Int64Wrapper.refObjectArrayType,
  uint64_values_default: UInt64Wrapper.refObjectArrayType,
  string_values_default: StringWrapper.refObjectArrayType,
  alignment_check: primitiveTypes.int32,
});
const UnboundedSequencesRefArray = ArrayType(UnboundedSequencesRefStruct);
const UnboundedSequencesRefStructArray = StructType({
  data: UnboundedSequencesRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class UnboundedSequencesWrapper {
  constructor(other) {
    this._wrapperFields = {};
    this._bool_valuesArray = [];
    this._int64_valuesArray = [];
    this._uint64_valuesArray = [];
    this._string_valuesArray = [];
    this._bool_values_defaultArray = [];
    this._int64_values_defaultArray = [];
    this._uint64_values_defaultArray = [];
    this._string_values_defaultArray = [];
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new UnboundedSequencesRefStruct(other._refObject.toObject());
      this._wrapperFields.bool_values = BoolWrapper.createArray();
      this._wrapperFields.bool_values.copy(other._wrapperFields.bool_values);
      this.bool_values = other.bool_values;
      this._wrapperFields.byte_values = ByteWrapper.createArray();
      this._wrapperFields.byte_values.copy(other._wrapperFields.byte_values);
      this._wrapperFields.char_values = CharWrapper.createArray();
      this._wrapperFields.char_values.copy(other._wrapperFields.char_values);
      this._wrapperFields.float32_values = Float32Wrapper.createArray();
      this._wrapperFields.float32_values.copy(other._wrapperFields.float32_values);
      this._wrapperFields.float64_values = Float64Wrapper.createArray();
      this._wrapperFields.float64_values.copy(other._wrapperFields.float64_values);
      this._wrapperFields.int8_values = Int8Wrapper.createArray();
      this._wrapperFields.int8_values.copy(other._wrapperFields.int8_values);
      this._wrapperFields.uint8_values = UInt8Wrapper.createArray();
      this._wrapperFields.uint8_values.copy(other._wrapperFields.uint8_values);
      this._wrapperFields.int16_values = Int16Wrapper.createArray();
      this._wrapperFields.int16_values.copy(other._wrapperFields.int16_values);
      this._wrapperFields.uint16_values = UInt16Wrapper.createArray();
      this._wrapperFields.uint16_values.copy(other._wrapperFields.uint16_values);
      this._wrapperFields.int32_values = Int32Wrapper.createArray();
      this._wrapperFields.int32_values.copy(other._wrapperFields.int32_values);
      this._wrapperFields.uint32_values = UInt32Wrapper.createArray();
      this._wrapperFields.uint32_values.copy(other._wrapperFields.uint32_values);
      this._wrapperFields.int64_values = Int64Wrapper.createArray();
      this._wrapperFields.int64_values.copy(other._wrapperFields.int64_values);
      this.int64_values = other.int64_values;
      this._wrapperFields.uint64_values = UInt64Wrapper.createArray();
      this._wrapperFields.uint64_values.copy(other._wrapperFields.uint64_values);
      this.uint64_values = other.uint64_values;
      this._wrapperFields.string_values = StringWrapper.createArray();
      this._wrapperFields.string_values.copy(other._wrapperFields.string_values);
      this.string_values = other.string_values;
      this._wrapperFields.basic_types_values = BasicTypesWrapper.createArray();
      this._wrapperFields.basic_types_values.copy(other._wrapperFields.basic_types_values);
      this._wrapperFields.constants_values = ConstantsWrapper.createArray();
      this._wrapperFields.constants_values.copy(other._wrapperFields.constants_values);
      this._wrapperFields.defaults_values = DefaultsWrapper.createArray();
      this._wrapperFields.defaults_values.copy(other._wrapperFields.defaults_values);
      this._wrapperFields.bool_values_default = BoolWrapper.createArray();
      this._wrapperFields.bool_values_default.copy(other._wrapperFields.bool_values_default);
      this.bool_values_default = other.bool_values_default;
      this._wrapperFields.byte_values_default = ByteWrapper.createArray();
      this._wrapperFields.byte_values_default.copy(other._wrapperFields.byte_values_default);
      this._wrapperFields.char_values_default = CharWrapper.createArray();
      this._wrapperFields.char_values_default.copy(other._wrapperFields.char_values_default);
      this._wrapperFields.float32_values_default = Float32Wrapper.createArray();
      this._wrapperFields.float32_values_default.copy(other._wrapperFields.float32_values_default);
      this._wrapperFields.float64_values_default = Float64Wrapper.createArray();
      this._wrapperFields.float64_values_default.copy(other._wrapperFields.float64_values_default);
      this._wrapperFields.int8_values_default = Int8Wrapper.createArray();
      this._wrapperFields.int8_values_default.copy(other._wrapperFields.int8_values_default);
      this._wrapperFields.uint8_values_default = UInt8Wrapper.createArray();
      this._wrapperFields.uint8_values_default.copy(other._wrapperFields.uint8_values_default);
      this._wrapperFields.int16_values_default = Int16Wrapper.createArray();
      this._wrapperFields.int16_values_default.copy(other._wrapperFields.int16_values_default);
      this._wrapperFields.uint16_values_default = UInt16Wrapper.createArray();
      this._wrapperFields.uint16_values_default.copy(other._wrapperFields.uint16_values_default);
      this._wrapperFields.int32_values_default = Int32Wrapper.createArray();
      this._wrapperFields.int32_values_default.copy(other._wrapperFields.int32_values_default);
      this._wrapperFields.uint32_values_default = UInt32Wrapper.createArray();
      this._wrapperFields.uint32_values_default.copy(other._wrapperFields.uint32_values_default);
      this._wrapperFields.int64_values_default = Int64Wrapper.createArray();
      this._wrapperFields.int64_values_default.copy(other._wrapperFields.int64_values_default);
      this.int64_values_default = other.int64_values_default;
      this._wrapperFields.uint64_values_default = UInt64Wrapper.createArray();
      this._wrapperFields.uint64_values_default.copy(other._wrapperFields.uint64_values_default);
      this.uint64_values_default = other.uint64_values_default;
      this._wrapperFields.string_values_default = StringWrapper.createArray();
      this._wrapperFields.string_values_default.copy(other._wrapperFields.string_values_default);
      this.string_values_default = other.string_values_default;
      this._alignment_checkIntialized = true;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new UnboundedSequencesRefStruct();
    this._wrapperFields.bool_values = BoolWrapper.createArray();
    this._wrapperFields.byte_values = ByteWrapper.createArray();
    this._wrapperFields.char_values = CharWrapper.createArray();
    this._wrapperFields.float32_values = Float32Wrapper.createArray();
    this._wrapperFields.float64_values = Float64Wrapper.createArray();
    this._wrapperFields.int8_values = Int8Wrapper.createArray();
    this._wrapperFields.uint8_values = UInt8Wrapper.createArray();
    this._wrapperFields.int16_values = Int16Wrapper.createArray();
    this._wrapperFields.uint16_values = UInt16Wrapper.createArray();
    this._wrapperFields.int32_values = Int32Wrapper.createArray();
    this._wrapperFields.uint32_values = UInt32Wrapper.createArray();
    this._wrapperFields.int64_values = Int64Wrapper.createArray();
    this._wrapperFields.uint64_values = UInt64Wrapper.createArray();
    this._wrapperFields.string_values = StringWrapper.createArray();
    this._wrapperFields.basic_types_values = BasicTypesWrapper.createArray();
    this._wrapperFields.constants_values = ConstantsWrapper.createArray();
    this._wrapperFields.defaults_values = DefaultsWrapper.createArray();
    this._wrapperFields.bool_values_default = BoolWrapper.createArray();
    this._bool_values_defaultArray = [false,true,false];
    this._wrapperFields.byte_values_default = ByteWrapper.createArray();
    this._wrapperFields.byte_values_default.fill(Uint8Array.from([0,1,255]));
    this._wrapperFields.char_values_default = CharWrapper.createArray();
    this._wrapperFields.char_values_default.fill(Int8Array.from([0,1,127]));
    this._wrapperFields.float32_values_default = Float32Wrapper.createArray();
    this._wrapperFields.float32_values_default.fill(Float32Array.from([1.125,0,-1.125]));
    this._wrapperFields.float64_values_default = Float64Wrapper.createArray();
    this._wrapperFields.float64_values_default.fill(Float64Array.from([3.1415,0,-3.1415]));
    this._wrapperFields.int8_values_default = Int8Wrapper.createArray();
    this._wrapperFields.int8_values_default.fill(Int8Array.from([0,127,-128]));
    this._wrapperFields.uint8_values_default = UInt8Wrapper.createArray();
    this._wrapperFields.uint8_values_default.fill(Uint8Array.from([0,1,255]));
    this._wrapperFields.int16_values_default = Int16Wrapper.createArray();
    this._wrapperFields.int16_values_default.fill(Int16Array.from([0,32767,-32768]));
    this._wrapperFields.uint16_values_default = UInt16Wrapper.createArray();
    this._wrapperFields.uint16_values_default.fill(Uint16Array.from([0,1,65535]));
    this._wrapperFields.int32_values_default = Int32Wrapper.createArray();
    this._wrapperFields.int32_values_default.fill(Int32Array.from([0,2147483647,-2147483648]));
    this._wrapperFields.uint32_values_default = UInt32Wrapper.createArray();
    this._wrapperFields.uint32_values_default.fill(Uint32Array.from([0,1,4294967295]));
    this._wrapperFields.int64_values_default = Int64Wrapper.createArray();
    this._int64_values_defaultArray = [0,9223372036854776000,-9223372036854776000];
    this._wrapperFields.uint64_values_default = UInt64Wrapper.createArray();
    this._uint64_values_defaultArray = [0,1,18446744073709552000];
    this._wrapperFields.string_values_default = StringWrapper.createArray();
    this._string_values_defaultArray = ["","max value","min value"];
    this._alignment_checkIntialized = false;
  }
  static createFromRefObject(refObject) {
    let self = new UnboundedSequencesWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new UnboundedSequencesArrayWrapper;
  }
  static get ArrayType() {
    return UnboundedSequencesArrayWrapper;
  }
  static get refObjectArrayType() {
    return UnboundedSequencesRefStructArray
  }
  static get refObjectType() {
    return UnboundedSequencesRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
    if (checkConsistency) {
      if (!this._alignment_checkIntialized) {
        throw new TypeError('Invalid argument: alignment_check in UnboundedSequences');
      }
    }
    if (!own) {
      this._wrapperFields.bool_values.fill(this._bool_valuesArray);
      this._wrapperFields.bool_values.freeze(own, checkConsistency);
      this._refObject.bool_values = this._wrapperFields.bool_values.refObject;
    } else {
      this._wrapperFields.bool_values.fill([]);
      this._wrapperFields.bool_values.freeze(own, checkConsistency);
      this._refObject.bool_values = this._wrapperFields.bool_values.refObject;
    }
    this._wrapperFields.byte_values.freeze(own, checkConsistency);
    this._refObject.byte_values = this._wrapperFields.byte_values.refObject;
    if (own) {
      this._wrapperFields.byte_values.fill(Uint8Array.from([]));
      this._wrapperFields.byte_values.freeze(own, checkConsistency);
      this._refObject.byte_values = this._wrapperFields.byte_values.refObject;
    }
    this._wrapperFields.char_values.freeze(own, checkConsistency);
    this._refObject.char_values = this._wrapperFields.char_values.refObject;
    if (own) {
      this._wrapperFields.char_values.fill(Int8Array.from([]));
      this._wrapperFields.char_values.freeze(own, checkConsistency);
      this._refObject.char_values = this._wrapperFields.char_values.refObject;
    }
    this._wrapperFields.float32_values.freeze(own, checkConsistency);
    this._refObject.float32_values = this._wrapperFields.float32_values.refObject;
    if (own) {
      this._wrapperFields.float32_values.fill(Float32Array.from([]));
      this._wrapperFields.float32_values.freeze(own, checkConsistency);
      this._refObject.float32_values = this._wrapperFields.float32_values.refObject;
    }
    this._wrapperFields.float64_values.freeze(own, checkConsistency);
    this._refObject.float64_values = this._wrapperFields.float64_values.refObject;
    if (own) {
      this._wrapperFields.float64_values.fill(Float64Array.from([]));
      this._wrapperFields.float64_values.freeze(own, checkConsistency);
      this._refObject.float64_values = this._wrapperFields.float64_values.refObject;
    }
    this._wrapperFields.int8_values.freeze(own, checkConsistency);
    this._refObject.int8_values = this._wrapperFields.int8_values.refObject;
    if (own) {
      this._wrapperFields.int8_values.fill(Int8Array.from([]));
      this._wrapperFields.int8_values.freeze(own, checkConsistency);
      this._refObject.int8_values = this._wrapperFields.int8_values.refObject;
    }
    this._wrapperFields.uint8_values.freeze(own, checkConsistency);
    this._refObject.uint8_values = this._wrapperFields.uint8_values.refObject;
    if (own) {
      this._wrapperFields.uint8_values.fill(Uint8Array.from([]));
      this._wrapperFields.uint8_values.freeze(own, checkConsistency);
      this._refObject.uint8_values = this._wrapperFields.uint8_values.refObject;
    }
    this._wrapperFields.int16_values.freeze(own, checkConsistency);
    this._refObject.int16_values = this._wrapperFields.int16_values.refObject;
    if (own) {
      this._wrapperFields.int16_values.fill(Int16Array.from([]));
      this._wrapperFields.int16_values.freeze(own, checkConsistency);
      this._refObject.int16_values = this._wrapperFields.int16_values.refObject;
    }
    this._wrapperFields.uint16_values.freeze(own, checkConsistency);
    this._refObject.uint16_values = this._wrapperFields.uint16_values.refObject;
    if (own) {
      this._wrapperFields.uint16_values.fill(Uint16Array.from([]));
      this._wrapperFields.uint16_values.freeze(own, checkConsistency);
      this._refObject.uint16_values = this._wrapperFields.uint16_values.refObject;
    }
    this._wrapperFields.int32_values.freeze(own, checkConsistency);
    this._refObject.int32_values = this._wrapperFields.int32_values.refObject;
    if (own) {
      this._wrapperFields.int32_values.fill(Int32Array.from([]));
      this._wrapperFields.int32_values.freeze(own, checkConsistency);
      this._refObject.int32_values = this._wrapperFields.int32_values.refObject;
    }
    this._wrapperFields.uint32_values.freeze(own, checkConsistency);
    this._refObject.uint32_values = this._wrapperFields.uint32_values.refObject;
    if (own) {
      this._wrapperFields.uint32_values.fill(Uint32Array.from([]));
      this._wrapperFields.uint32_values.freeze(own, checkConsistency);
      this._refObject.uint32_values = this._wrapperFields.uint32_values.refObject;
    }
    if (!own) {
      this._wrapperFields.int64_values.fill(this._int64_valuesArray);
      this._wrapperFields.int64_values.freeze(own, checkConsistency);
      this._refObject.int64_values = this._wrapperFields.int64_values.refObject;
    } else {
      this._wrapperFields.int64_values.fill([]);
      this._wrapperFields.int64_values.freeze(own, checkConsistency);
      this._refObject.int64_values = this._wrapperFields.int64_values.refObject;
    }
    if (!own) {
      this._wrapperFields.uint64_values.fill(this._uint64_valuesArray);
      this._wrapperFields.uint64_values.freeze(own, checkConsistency);
      this._refObject.uint64_values = this._wrapperFields.uint64_values.refObject;
    } else {
      this._wrapperFields.uint64_values.fill([]);
      this._wrapperFields.uint64_values.freeze(own, checkConsistency);
      this._refObject.uint64_values = this._wrapperFields.uint64_values.refObject;
    }
    if (!own) {
      this._wrapperFields.string_values.fill(this._string_valuesArray);
      this._wrapperFields.string_values.freeze(own, checkConsistency);
      this._refObject.string_values = this._wrapperFields.string_values.refObject;
    } else {
      this._wrapperFields.string_values.fill([]);
      this._wrapperFields.string_values.freeze(own, checkConsistency);
      this._refObject.string_values = this._wrapperFields.string_values.refObject;
    }
    this._wrapperFields.basic_types_values.freeze(own, checkConsistency);
    this._refObject.basic_types_values = this._wrapperFields.basic_types_values.refObject;
    this._wrapperFields.constants_values.freeze(own, checkConsistency);
    this._refObject.constants_values = this._wrapperFields.constants_values.refObject;
    this._wrapperFields.defaults_values.freeze(own, checkConsistency);
    this._refObject.defaults_values = this._wrapperFields.defaults_values.refObject;
    if (!own) {
      this._wrapperFields.bool_values_default.fill(this._bool_values_defaultArray);
      this._wrapperFields.bool_values_default.freeze(own, checkConsistency);
      this._refObject.bool_values_default = this._wrapperFields.bool_values_default.refObject;
    } else {
      this._wrapperFields.bool_values_default.fill([]);
      this._wrapperFields.bool_values_default.freeze(own, checkConsistency);
      this._refObject.bool_values_default = this._wrapperFields.bool_values_default.refObject;
    }
    this._wrapperFields.byte_values_default.freeze(own, checkConsistency);
    this._refObject.byte_values_default = this._wrapperFields.byte_values_default.refObject;
    if (own) {
      this._wrapperFields.byte_values_default.fill(Uint8Array.from([]));
      this._wrapperFields.byte_values_default.freeze(own, checkConsistency);
      this._refObject.byte_values_default = this._wrapperFields.byte_values_default.refObject;
    }
    this._wrapperFields.char_values_default.freeze(own, checkConsistency);
    this._refObject.char_values_default = this._wrapperFields.char_values_default.refObject;
    if (own) {
      this._wrapperFields.char_values_default.fill(Int8Array.from([]));
      this._wrapperFields.char_values_default.freeze(own, checkConsistency);
      this._refObject.char_values_default = this._wrapperFields.char_values_default.refObject;
    }
    this._wrapperFields.float32_values_default.freeze(own, checkConsistency);
    this._refObject.float32_values_default = this._wrapperFields.float32_values_default.refObject;
    if (own) {
      this._wrapperFields.float32_values_default.fill(Float32Array.from([]));
      this._wrapperFields.float32_values_default.freeze(own, checkConsistency);
      this._refObject.float32_values_default = this._wrapperFields.float32_values_default.refObject;
    }
    this._wrapperFields.float64_values_default.freeze(own, checkConsistency);
    this._refObject.float64_values_default = this._wrapperFields.float64_values_default.refObject;
    if (own) {
      this._wrapperFields.float64_values_default.fill(Float64Array.from([]));
      this._wrapperFields.float64_values_default.freeze(own, checkConsistency);
      this._refObject.float64_values_default = this._wrapperFields.float64_values_default.refObject;
    }
    this._wrapperFields.int8_values_default.freeze(own, checkConsistency);
    this._refObject.int8_values_default = this._wrapperFields.int8_values_default.refObject;
    if (own) {
      this._wrapperFields.int8_values_default.fill(Int8Array.from([]));
      this._wrapperFields.int8_values_default.freeze(own, checkConsistency);
      this._refObject.int8_values_default = this._wrapperFields.int8_values_default.refObject;
    }
    this._wrapperFields.uint8_values_default.freeze(own, checkConsistency);
    this._refObject.uint8_values_default = this._wrapperFields.uint8_values_default.refObject;
    if (own) {
      this._wrapperFields.uint8_values_default.fill(Uint8Array.from([]));
      this._wrapperFields.uint8_values_default.freeze(own, checkConsistency);
      this._refObject.uint8_values_default = this._wrapperFields.uint8_values_default.refObject;
    }
    this._wrapperFields.int16_values_default.freeze(own, checkConsistency);
    this._refObject.int16_values_default = this._wrapperFields.int16_values_default.refObject;
    if (own) {
      this._wrapperFields.int16_values_default.fill(Int16Array.from([]));
      this._wrapperFields.int16_values_default.freeze(own, checkConsistency);
      this._refObject.int16_values_default = this._wrapperFields.int16_values_default.refObject;
    }
    this._wrapperFields.uint16_values_default.freeze(own, checkConsistency);
    this._refObject.uint16_values_default = this._wrapperFields.uint16_values_default.refObject;
    if (own) {
      this._wrapperFields.uint16_values_default.fill(Uint16Array.from([]));
      this._wrapperFields.uint16_values_default.freeze(own, checkConsistency);
      this._refObject.uint16_values_default = this._wrapperFields.uint16_values_default.refObject;
    }
    this._wrapperFields.int32_values_default.freeze(own, checkConsistency);
    this._refObject.int32_values_default = this._wrapperFields.int32_values_default.refObject;
    if (own) {
      this._wrapperFields.int32_values_default.fill(Int32Array.from([]));
      this._wrapperFields.int32_values_default.freeze(own, checkConsistency);
      this._refObject.int32_values_default = this._wrapperFields.int32_values_default.refObject;
    }
    this._wrapperFields.uint32_values_default.freeze(own, checkConsistency);
    this._refObject.uint32_values_default = this._wrapperFields.uint32_values_default.refObject;
    if (own) {
      this._wrapperFields.uint32_values_default.fill(Uint32Array.from([]));
      this._wrapperFields.uint32_values_default.freeze(own, checkConsistency);
      this._refObject.uint32_values_default = this._wrapperFields.uint32_values_default.refObject;
    }
    if (!own) {
      this._wrapperFields.int64_values_default.fill(this._int64_values_defaultArray);
      this._wrapperFields.int64_values_default.freeze(own, checkConsistency);
      this._refObject.int64_values_default = this._wrapperFields.int64_values_default.refObject;
    } else {
      this._wrapperFields.int64_values_default.fill([]);
      this._wrapperFields.int64_values_default.freeze(own, checkConsistency);
      this._refObject.int64_values_default = this._wrapperFields.int64_values_default.refObject;
    }
    if (!own) {
      this._wrapperFields.uint64_values_default.fill(this._uint64_values_defaultArray);
      this._wrapperFields.uint64_values_default.freeze(own, checkConsistency);
      this._refObject.uint64_values_default = this._wrapperFields.uint64_values_default.refObject;
    } else {
      this._wrapperFields.uint64_values_default.fill([]);
      this._wrapperFields.uint64_values_default.freeze(own, checkConsistency);
      this._refObject.uint64_values_default = this._wrapperFields.uint64_values_default.refObject;
    }
    if (!own) {
      this._wrapperFields.string_values_default.fill(this._string_values_defaultArray);
      this._wrapperFields.string_values_default.freeze(own, checkConsistency);
      this._refObject.string_values_default = this._wrapperFields.string_values_default.refObject;
    } else {
      this._wrapperFields.string_values_default.fill([]);
      this._wrapperFields.string_values_default.freeze(own, checkConsistency);
      this._refObject.string_values_default = this._wrapperFields.string_values_default.refObject;
    }
  }
  serialize() {
    this.freeze(false, true);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    refObject.bool_values.data.length = refObject.bool_values.size;
    for (let index = 0; index < refObject.bool_values.size; index++) {
      this._bool_valuesArray[index] = refObject.bool_values.data[index].data;
    }
    this._wrapperFields.byte_values.copyRefObject(refObject.byte_values);
    this._wrapperFields.char_values.copyRefObject(refObject.char_values);
    this._wrapperFields.float32_values.copyRefObject(refObject.float32_values);
    this._wrapperFields.float64_values.copyRefObject(refObject.float64_values);
    this._wrapperFields.int8_values.copyRefObject(refObject.int8_values);
    this._wrapperFields.uint8_values.copyRefObject(refObject.uint8_values);
    this._wrapperFields.int16_values.copyRefObject(refObject.int16_values);
    this._wrapperFields.uint16_values.copyRefObject(refObject.uint16_values);
    this._wrapperFields.int32_values.copyRefObject(refObject.int32_values);
    this._wrapperFields.uint32_values.copyRefObject(refObject.uint32_values);
    refObject.int64_values.data.length = refObject.int64_values.size;
    for (let index = 0; index < refObject.int64_values.size; index++) {
      this._int64_valuesArray[index] = refObject.int64_values.data[index].data;
    }
    refObject.uint64_values.data.length = refObject.uint64_values.size;
    for (let index = 0; index < refObject.uint64_values.size; index++) {
      this._uint64_valuesArray[index] = refObject.uint64_values.data[index].data;
    }
    refObject.string_values.data.length = refObject.string_values.size;
    for (let index = 0; index < refObject.string_values.size; index++) {
      this._string_valuesArray[index] = refObject.string_values.data[index].data;
    }
    this._wrapperFields.basic_types_values.copyRefObject(refObject.basic_types_values);
    this._wrapperFields.constants_values.copyRefObject(refObject.constants_values);
    this._wrapperFields.defaults_values.copyRefObject(refObject.defaults_values);
    refObject.bool_values_default.data.length = refObject.bool_values_default.size;
    for (let index = 0; index < refObject.bool_values_default.size; index++) {
      this._bool_values_defaultArray[index] = refObject.bool_values_default.data[index].data;
    }
    this._wrapperFields.byte_values_default.copyRefObject(refObject.byte_values_default);
    this._wrapperFields.char_values_default.copyRefObject(refObject.char_values_default);
    this._wrapperFields.float32_values_default.copyRefObject(refObject.float32_values_default);
    this._wrapperFields.float64_values_default.copyRefObject(refObject.float64_values_default);
    this._wrapperFields.int8_values_default.copyRefObject(refObject.int8_values_default);
    this._wrapperFields.uint8_values_default.copyRefObject(refObject.uint8_values_default);
    this._wrapperFields.int16_values_default.copyRefObject(refObject.int16_values_default);
    this._wrapperFields.uint16_values_default.copyRefObject(refObject.uint16_values_default);
    this._wrapperFields.int32_values_default.copyRefObject(refObject.int32_values_default);
    this._wrapperFields.uint32_values_default.copyRefObject(refObject.uint32_values_default);
    refObject.int64_values_default.data.length = refObject.int64_values_default.size;
    for (let index = 0; index < refObject.int64_values_default.size; index++) {
      this._int64_values_defaultArray[index] = refObject.int64_values_default.data[index].data;
    }
    refObject.uint64_values_default.data.length = refObject.uint64_values_default.size;
    for (let index = 0; index < refObject.uint64_values_default.size; index++) {
      this._uint64_values_defaultArray[index] = refObject.uint64_values_default.data[index].data;
    }
    refObject.string_values_default.data.length = refObject.string_values_default.size;
    for (let index = 0; index < refObject.string_values_default.size; index++) {
      this._string_values_defaultArray[index] = refObject.string_values_default.data[index].data;
    }
    this._alignment_checkIntialized = true;
    this._refObject.alignment_check = refObject.alignment_check;
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
    if (refObject.bool_values.size != 0) {
      BoolWrapper.ArrayType.freeArray(refObject.bool_values);
      if (BoolWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.bool_values, BoolWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.byte_values.size != 0) {
      ByteWrapper.ArrayType.freeArray(refObject.byte_values);
      if (ByteWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.byte_values, ByteWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.char_values.size != 0) {
      CharWrapper.ArrayType.freeArray(refObject.char_values);
      if (CharWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.char_values, CharWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.float32_values.size != 0) {
      Float32Wrapper.ArrayType.freeArray(refObject.float32_values);
      if (Float32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.float32_values, Float32Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.float64_values.size != 0) {
      Float64Wrapper.ArrayType.freeArray(refObject.float64_values);
      if (Float64Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.float64_values, Float64Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.int8_values.size != 0) {
      Int8Wrapper.ArrayType.freeArray(refObject.int8_values);
      if (Int8Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.int8_values, Int8Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.uint8_values.size != 0) {
      UInt8Wrapper.ArrayType.freeArray(refObject.uint8_values);
      if (UInt8Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.uint8_values, UInt8Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.int16_values.size != 0) {
      Int16Wrapper.ArrayType.freeArray(refObject.int16_values);
      if (Int16Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.int16_values, Int16Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.uint16_values.size != 0) {
      UInt16Wrapper.ArrayType.freeArray(refObject.uint16_values);
      if (UInt16Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.uint16_values, UInt16Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.int32_values.size != 0) {
      Int32Wrapper.ArrayType.freeArray(refObject.int32_values);
      if (Int32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.int32_values, Int32Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.uint32_values.size != 0) {
      UInt32Wrapper.ArrayType.freeArray(refObject.uint32_values);
      if (UInt32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.uint32_values, UInt32Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.int64_values.size != 0) {
      Int64Wrapper.ArrayType.freeArray(refObject.int64_values);
      if (Int64Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.int64_values, Int64Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.uint64_values.size != 0) {
      UInt64Wrapper.ArrayType.freeArray(refObject.uint64_values);
      if (UInt64Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.uint64_values, UInt64Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.string_values.size != 0) {
      StringWrapper.ArrayType.freeArray(refObject.string_values);
      if (StringWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.string_values, StringWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.basic_types_values.size != 0) {
      BasicTypesWrapper.ArrayType.freeArray(refObject.basic_types_values);
      if (BasicTypesWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.basic_types_values, BasicTypesWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.constants_values.size != 0) {
      ConstantsWrapper.ArrayType.freeArray(refObject.constants_values);
      if (ConstantsWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.constants_values, ConstantsWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.defaults_values.size != 0) {
      DefaultsWrapper.ArrayType.freeArray(refObject.defaults_values);
      if (DefaultsWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.defaults_values, DefaultsWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.bool_values_default.size != 0) {
      BoolWrapper.ArrayType.freeArray(refObject.bool_values_default);
      if (BoolWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.bool_values_default, BoolWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.byte_values_default.size != 0) {
      ByteWrapper.ArrayType.freeArray(refObject.byte_values_default);
      if (ByteWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.byte_values_default, ByteWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.char_values_default.size != 0) {
      CharWrapper.ArrayType.freeArray(refObject.char_values_default);
      if (CharWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.char_values_default, CharWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.float32_values_default.size != 0) {
      Float32Wrapper.ArrayType.freeArray(refObject.float32_values_default);
      if (Float32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.float32_values_default, Float32Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.float64_values_default.size != 0) {
      Float64Wrapper.ArrayType.freeArray(refObject.float64_values_default);
      if (Float64Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.float64_values_default, Float64Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.int8_values_default.size != 0) {
      Int8Wrapper.ArrayType.freeArray(refObject.int8_values_default);
      if (Int8Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.int8_values_default, Int8Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.uint8_values_default.size != 0) {
      UInt8Wrapper.ArrayType.freeArray(refObject.uint8_values_default);
      if (UInt8Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.uint8_values_default, UInt8Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.int16_values_default.size != 0) {
      Int16Wrapper.ArrayType.freeArray(refObject.int16_values_default);
      if (Int16Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.int16_values_default, Int16Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.uint16_values_default.size != 0) {
      UInt16Wrapper.ArrayType.freeArray(refObject.uint16_values_default);
      if (UInt16Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.uint16_values_default, UInt16Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.int32_values_default.size != 0) {
      Int32Wrapper.ArrayType.freeArray(refObject.int32_values_default);
      if (Int32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.int32_values_default, Int32Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.uint32_values_default.size != 0) {
      UInt32Wrapper.ArrayType.freeArray(refObject.uint32_values_default);
      if (UInt32Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.uint32_values_default, UInt32Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.int64_values_default.size != 0) {
      Int64Wrapper.ArrayType.freeArray(refObject.int64_values_default);
      if (Int64Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.int64_values_default, Int64Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.uint64_values_default.size != 0) {
      UInt64Wrapper.ArrayType.freeArray(refObject.uint64_values_default);
      if (UInt64Wrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.uint64_values_default, UInt64Wrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.string_values_default.size != 0) {
      StringWrapper.ArrayType.freeArray(refObject.string_values_default);
      if (StringWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.string_values_default, StringWrapper.refObjectArrayType, 'data');
      }
    }
  }
  static destoryRawROS(msg) {
    UnboundedSequencesWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'test_msgs', subFolder: 'msg', interfaceName: 'UnboundedSequences'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get bool_values() {
    return this._bool_valuesArray;
  }
  set bool_values(value) {
    this._bool_valuesArray = value;
  }
  get byte_values() {
    return this._wrapperFields['byte_values'].data;
  }
  set byte_values(value) {
    this._wrapperFields['byte_values'].fill(value);
  }
  get char_values() {
    return this._wrapperFields['char_values'].data;
  }
  set char_values(value) {
    this._wrapperFields['char_values'].fill(value);
  }
  get float32_values() {
    return this._wrapperFields['float32_values'].data;
  }
  set float32_values(value) {
    this._wrapperFields['float32_values'].fill(value);
  }
  get float64_values() {
    return this._wrapperFields['float64_values'].data;
  }
  set float64_values(value) {
    this._wrapperFields['float64_values'].fill(value);
  }
  get int8_values() {
    return this._wrapperFields['int8_values'].data;
  }
  set int8_values(value) {
    this._wrapperFields['int8_values'].fill(value);
  }
  get uint8_values() {
    return this._wrapperFields['uint8_values'].data;
  }
  set uint8_values(value) {
    this._wrapperFields['uint8_values'].fill(value);
  }
  get int16_values() {
    return this._wrapperFields['int16_values'].data;
  }
  set int16_values(value) {
    this._wrapperFields['int16_values'].fill(value);
  }
  get uint16_values() {
    return this._wrapperFields['uint16_values'].data;
  }
  set uint16_values(value) {
    this._wrapperFields['uint16_values'].fill(value);
  }
  get int32_values() {
    return this._wrapperFields['int32_values'].data;
  }
  set int32_values(value) {
    this._wrapperFields['int32_values'].fill(value);
  }
  get uint32_values() {
    return this._wrapperFields['uint32_values'].data;
  }
  set uint32_values(value) {
    this._wrapperFields['uint32_values'].fill(value);
  }
  get int64_values() {
    return this._int64_valuesArray;
  }
  set int64_values(value) {
    this._int64_valuesArray = value;
  }
  get uint64_values() {
    return this._uint64_valuesArray;
  }
  set uint64_values(value) {
    this._uint64_valuesArray = value;
  }
  get string_values() {
    return this._string_valuesArray;
  }
  set string_values(value) {
    this._string_valuesArray = value;
  }
  get basic_types_values() {
    return this._wrapperFields.basic_types_values;
  }
  set basic_types_values(value) {
    this._wrapperFields.basic_types_values.fill(value);
  }
  get constants_values() {
    return this._wrapperFields.constants_values;
  }
  set constants_values(value) {
    this._wrapperFields.constants_values.fill(value);
  }
  get defaults_values() {
    return this._wrapperFields.defaults_values;
  }
  set defaults_values(value) {
    this._wrapperFields.defaults_values.fill(value);
  }
  get bool_values_default() {
    return this._bool_values_defaultArray;
  }
  set bool_values_default(value) {
    this._bool_values_defaultArray = value;
  }
  get byte_values_default() {
    return this._wrapperFields['byte_values_default'].data;
  }
  set byte_values_default(value) {
    this._wrapperFields['byte_values_default'].fill(value);
  }
  get char_values_default() {
    return this._wrapperFields['char_values_default'].data;
  }
  set char_values_default(value) {
    this._wrapperFields['char_values_default'].fill(value);
  }
  get float32_values_default() {
    return this._wrapperFields['float32_values_default'].data;
  }
  set float32_values_default(value) {
    this._wrapperFields['float32_values_default'].fill(value);
  }
  get float64_values_default() {
    return this._wrapperFields['float64_values_default'].data;
  }
  set float64_values_default(value) {
    this._wrapperFields['float64_values_default'].fill(value);
  }
  get int8_values_default() {
    return this._wrapperFields['int8_values_default'].data;
  }
  set int8_values_default(value) {
    this._wrapperFields['int8_values_default'].fill(value);
  }
  get uint8_values_default() {
    return this._wrapperFields['uint8_values_default'].data;
  }
  set uint8_values_default(value) {
    this._wrapperFields['uint8_values_default'].fill(value);
  }
  get int16_values_default() {
    return this._wrapperFields['int16_values_default'].data;
  }
  set int16_values_default(value) {
    this._wrapperFields['int16_values_default'].fill(value);
  }
  get uint16_values_default() {
    return this._wrapperFields['uint16_values_default'].data;
  }
  set uint16_values_default(value) {
    this._wrapperFields['uint16_values_default'].fill(value);
  }
  get int32_values_default() {
    return this._wrapperFields['int32_values_default'].data;
  }
  set int32_values_default(value) {
    this._wrapperFields['int32_values_default'].fill(value);
  }
  get uint32_values_default() {
    return this._wrapperFields['uint32_values_default'].data;
  }
  set uint32_values_default(value) {
    this._wrapperFields['uint32_values_default'].fill(value);
  }
  get int64_values_default() {
    return this._int64_values_defaultArray;
  }
  set int64_values_default(value) {
    this._int64_values_defaultArray = value;
  }
  get uint64_values_default() {
    return this._uint64_values_defaultArray;
  }
  set uint64_values_default(value) {
    this._uint64_values_defaultArray = value;
  }
  get string_values_default() {
    return this._string_values_defaultArray;
  }
  set string_values_default(value) {
    this._string_values_defaultArray = value;
  }
  get alignment_check() {
    if (!this._alignment_checkIntialized) {
      return undefined;
    }
    return this._refObject.alignment_check;
  }
  set alignment_check(value) {
    this._alignment_checkIntialized = true;
    this._refObject.alignment_check = value;
  }
  copyRefObject(refObject) {
    this._refObject = new UnboundedSequencesRefStruct(refObject.toObject());
    refObject.bool_values.data.length = refObject.bool_values.size;
    for (let index = 0; index < refObject.bool_values.size; index++) {
      this._bool_valuesArray[index] = refObject.bool_values.data[index].data;
    }
    this._wrapperFields.byte_values.copyRefObject(this._refObject.byte_values);
    this._wrapperFields.char_values.copyRefObject(this._refObject.char_values);
    this._wrapperFields.float32_values.copyRefObject(this._refObject.float32_values);
    this._wrapperFields.float64_values.copyRefObject(this._refObject.float64_values);
    this._wrapperFields.int8_values.copyRefObject(this._refObject.int8_values);
    this._wrapperFields.uint8_values.copyRefObject(this._refObject.uint8_values);
    this._wrapperFields.int16_values.copyRefObject(this._refObject.int16_values);
    this._wrapperFields.uint16_values.copyRefObject(this._refObject.uint16_values);
    this._wrapperFields.int32_values.copyRefObject(this._refObject.int32_values);
    this._wrapperFields.uint32_values.copyRefObject(this._refObject.uint32_values);
    refObject.int64_values.data.length = refObject.int64_values.size;
    for (let index = 0; index < refObject.int64_values.size; index++) {
      this._int64_valuesArray[index] = refObject.int64_values.data[index].data;
    }
    refObject.uint64_values.data.length = refObject.uint64_values.size;
    for (let index = 0; index < refObject.uint64_values.size; index++) {
      this._uint64_valuesArray[index] = refObject.uint64_values.data[index].data;
    }
    refObject.string_values.data.length = refObject.string_values.size;
    for (let index = 0; index < refObject.string_values.size; index++) {
      this._string_valuesArray[index] = refObject.string_values.data[index].data;
    }
    this._wrapperFields.basic_types_values.copyRefObject(this._refObject.basic_types_values);
    this._wrapperFields.constants_values.copyRefObject(this._refObject.constants_values);
    this._wrapperFields.defaults_values.copyRefObject(this._refObject.defaults_values);
    refObject.bool_values_default.data.length = refObject.bool_values_default.size;
    for (let index = 0; index < refObject.bool_values_default.size; index++) {
      this._bool_values_defaultArray[index] = refObject.bool_values_default.data[index].data;
    }
    this._wrapperFields.byte_values_default.copyRefObject(this._refObject.byte_values_default);
    this._wrapperFields.char_values_default.copyRefObject(this._refObject.char_values_default);
    this._wrapperFields.float32_values_default.copyRefObject(this._refObject.float32_values_default);
    this._wrapperFields.float64_values_default.copyRefObject(this._refObject.float64_values_default);
    this._wrapperFields.int8_values_default.copyRefObject(this._refObject.int8_values_default);
    this._wrapperFields.uint8_values_default.copyRefObject(this._refObject.uint8_values_default);
    this._wrapperFields.int16_values_default.copyRefObject(this._refObject.int16_values_default);
    this._wrapperFields.uint16_values_default.copyRefObject(this._refObject.uint16_values_default);
    this._wrapperFields.int32_values_default.copyRefObject(this._refObject.int32_values_default);
    this._wrapperFields.uint32_values_default.copyRefObject(this._refObject.uint32_values_default);
    refObject.int64_values_default.data.length = refObject.int64_values_default.size;
    for (let index = 0; index < refObject.int64_values_default.size; index++) {
      this._int64_values_defaultArray[index] = refObject.int64_values_default.data[index].data;
    }
    refObject.uint64_values_default.data.length = refObject.uint64_values_default.size;
    for (let index = 0; index < refObject.uint64_values_default.size; index++) {
      this._uint64_values_defaultArray[index] = refObject.uint64_values_default.data[index].data;
    }
    refObject.string_values_default.data.length = refObject.string_values_default.size;
    for (let index = 0; index < refObject.string_values_default.size; index++) {
      this._string_values_defaultArray[index] = refObject.string_values_default.data[index].data;
    }
    this._alignment_checkIntialized = true;
  }
  copy(other) {
    this._refObject = new UnboundedSequencesRefStruct(other._refObject.toObject());
    this._bool_valuesArray = other._bool_valuesArray.slice();
    this._wrapperFields.byte_values.copy(other._wrapperFields.byte_values);
    this._wrapperFields.char_values.copy(other._wrapperFields.char_values);
    this._wrapperFields.float32_values.copy(other._wrapperFields.float32_values);
    this._wrapperFields.float64_values.copy(other._wrapperFields.float64_values);
    this._wrapperFields.int8_values.copy(other._wrapperFields.int8_values);
    this._wrapperFields.uint8_values.copy(other._wrapperFields.uint8_values);
    this._wrapperFields.int16_values.copy(other._wrapperFields.int16_values);
    this._wrapperFields.uint16_values.copy(other._wrapperFields.uint16_values);
    this._wrapperFields.int32_values.copy(other._wrapperFields.int32_values);
    this._wrapperFields.uint32_values.copy(other._wrapperFields.uint32_values);
    this._int64_valuesArray = other._int64_valuesArray.slice();
    this._uint64_valuesArray = other._uint64_valuesArray.slice();
    this._string_valuesArray = other._string_valuesArray.slice();
    this._wrapperFields.basic_types_values.copy(other._wrapperFields.basic_types_values);
    this._wrapperFields.constants_values.copy(other._wrapperFields.constants_values);
    this._wrapperFields.defaults_values.copy(other._wrapperFields.defaults_values);
    this._bool_values_defaultArray = other._bool_values_defaultArray.slice();
    this._wrapperFields.byte_values_default.copy(other._wrapperFields.byte_values_default);
    this._wrapperFields.char_values_default.copy(other._wrapperFields.char_values_default);
    this._wrapperFields.float32_values_default.copy(other._wrapperFields.float32_values_default);
    this._wrapperFields.float64_values_default.copy(other._wrapperFields.float64_values_default);
    this._wrapperFields.int8_values_default.copy(other._wrapperFields.int8_values_default);
    this._wrapperFields.uint8_values_default.copy(other._wrapperFields.uint8_values_default);
    this._wrapperFields.int16_values_default.copy(other._wrapperFields.int16_values_default);
    this._wrapperFields.uint16_values_default.copy(other._wrapperFields.uint16_values_default);
    this._wrapperFields.int32_values_default.copy(other._wrapperFields.int32_values_default);
    this._wrapperFields.uint32_values_default.copy(other._wrapperFields.uint32_values_default);
    this._int64_values_defaultArray = other._int64_values_defaultArray.slice();
    this._uint64_values_defaultArray = other._uint64_values_defaultArray.slice();
    this._string_values_defaultArray = other._string_values_defaultArray.slice();
    this._alignment_checkIntialized = true;
  }
  static get classType() {
    return UnboundedSequencesWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"bool_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"byte_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"byte","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"char_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"char","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"float32_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"float64_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"int8_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"uint8_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"int16_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"uint16_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"int32_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"uint32_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"int64_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"uint64_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"string_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"string","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"basic_types_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":"test_msgs","type":"BasicTypes","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"constants_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":"test_msgs","type":"Constants","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"defaults_values","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":"test_msgs","type":"Defaults","stringUpperBound":null,"isPrimitiveType":false},"default_value":null},{"name":"bool_values_default","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"bool","stringUpperBound":null,"isPrimitiveType":true},"default_value":[false,true,false]},{"name":"byte_values_default","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"byte","stringUpperBound":null,"isPrimitiveType":true},"default_value":[0,1,255]},{"name":"char_values_default","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"char","stringUpperBound":null,"isPrimitiveType":true},"default_value":[0,1,127]},{"name":"float32_values_default","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"float32","stringUpperBound":null,"isPrimitiveType":true},"default_value":[1.125,0,-1.125]},{"name":"float64_values_default","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"float64","stringUpperBound":null,"isPrimitiveType":true},"default_value":[3.1415,0,-3.1415]},{"name":"int8_values_default","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int8","stringUpperBound":null,"isPrimitiveType":true},"default_value":[0,127,-128]},{"name":"uint8_values_default","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"uint8","stringUpperBound":null,"isPrimitiveType":true},"default_value":[0,1,255]},{"name":"int16_values_default","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int16","stringUpperBound":null,"isPrimitiveType":true},"default_value":[0,32767,-32768]},{"name":"uint16_values_default","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"uint16","stringUpperBound":null,"isPrimitiveType":true},"default_value":[0,1,65535]},{"name":"int32_values_default","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":[0,2147483647,-2147483648]},{"name":"uint32_values_default","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"uint32","stringUpperBound":null,"isPrimitiveType":true},"default_value":[0,1,4294967295]},{"name":"int64_values_default","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"int64","stringUpperBound":null,"isPrimitiveType":true},"default_value":[0,9223372036854776000,-9223372036854776000]},{"name":"uint64_values_default","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"uint64","stringUpperBound":null,"isPrimitiveType":true},"default_value":[0,1,18446744073709552000]},{"name":"string_values_default","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"string","stringUpperBound":null,"isPrimitiveType":true},"default_value":["","max value","min value"]},{"name":"alignment_check","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"int32","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"test_msgs","type":"UnboundedSequences","stringUpperBound":null,"isPrimitiveType":false},"msgName":"UnboundedSequences"};
  }
  hasMember(name) {
    let memberNames = ["bool_values","byte_values","char_values","float32_values","float64_values","int8_values","uint8_values","int16_values","uint16_values","int32_values","uint32_values","int64_values","uint64_values","string_values","basic_types_values","constants_values","defaults_values","bool_values_default","byte_values_default","char_values_default","float32_values_default","float64_values_default","int8_values_default","uint8_values_default","int16_values_default","uint16_values_default","int32_values_default","uint32_values_default","int64_values_default","uint64_values_default","string_values_default","alignment_check"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class UnboundedSequencesArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof UnboundedSequencesWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new UnboundedSequencesWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to UnboundedSequencesArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to UnboundedSequencesArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new UnboundedSequencesRefArray(size);
    this._refObject = new UnboundedSequencesRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new UnboundedSequencesWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof UnboundedSequencesArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "UnboundedSequencesArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      UnboundedSequencesWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return UnboundedSequencesWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return UnboundedSequencesArrayWrapper;
  }
}
module.exports = UnboundedSequencesWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "bool_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "byte_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "byte",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "char_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "char",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "float32_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "float64_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "int8_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "uint8_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "int16_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "uint16_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "int32_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "uint32_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "int64_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "uint64_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "string_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "string",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "basic_types_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": "test_msgs",
        "type": "BasicTypes",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "constants_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": "test_msgs",
        "type": "Constants",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "defaults_values",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": "test_msgs",
        "type": "Defaults",
        "stringUpperBound": null,
        "isPrimitiveType": false
      },
      "default_value": null
    },
    {
      "name": "bool_values_default",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "bool",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": [
        false,
        true,
        false
      ]
    },
    {
      "name": "byte_values_default",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "byte",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": [
        0,
        1,
        255
      ]
    },
    {
      "name": "char_values_default",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "char",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": [
        0,
        1,
        127
      ]
    },
    {
      "name": "float32_values_default",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "float32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": [
        1.125,
        0,
        -1.125
      ]
    },
    {
      "name": "float64_values_default",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "float64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": [
        3.1415,
        0,
        -3.1415
      ]
    },
    {
      "name": "int8_values_default",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": [
        0,
        127,
        -128
      ]
    },
    {
      "name": "uint8_values_default",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "uint8",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": [
        0,
        1,
        255
      ]
    },
    {
      "name": "int16_values_default",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": [
        0,
        32767,
        -32768
      ]
    },
    {
      "name": "uint16_values_default",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "uint16",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": [
        0,
        1,
        65535
      ]
    },
    {
      "name": "int32_values_default",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": [
        0,
        2147483647,
        -2147483648
      ]
    },
    {
      "name": "uint32_values_default",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "uint32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": [
        0,
        1,
        4294967295
      ]
    },
    {
      "name": "int64_values_default",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "int64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": [
        0,
        9223372036854776000,
        -9223372036854776000
      ]
    },
    {
      "name": "uint64_values_default",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "uint64",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": [
        0,
        1,
        18446744073709552000
      ]
    },
    {
      "name": "string_values_default",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "string",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": [
        "",
        "max value",
        "min value"
      ]
    },
    {
      "name": "alignment_check",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "int32",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "test_msgs",
    "type": "UnboundedSequences",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "UnboundedSequences"
}
*/
