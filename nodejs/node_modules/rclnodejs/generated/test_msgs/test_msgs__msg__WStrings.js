// This file is automatically generated by Intel rclnodejs
//
// *** DO NOT EDIT directly
//
'use strict';
const ref = require('@rclnodejs/ref-napi');
const StructType = require('@rclnodejs/ref-struct-di')(ref);
const ArrayType = require('@rclnodejs/ref-array-di')(ref);
const primitiveTypes = require('../../rosidl_gen/primitive_types.js');
const deallocator = require('../../rosidl_gen/deallocator.js');
const translator = require('../../rosidl_gen/message_translator.js');
const StringWrapper = require('../../generated/std_msgs/std_msgs__msg__String.js');
const WStringsRefStruct = StructType({
  wstring_value: primitiveTypes.wstring,
  wstring_value_default1: primitiveTypes.wstring,
  wstring_value_default2: primitiveTypes.wstring,
  wstring_value_default3: primitiveTypes.wstring,
  array_of_wstrings: ArrayType(primitiveTypes.wstring, 3),
  bounded_sequence_of_wstrings: StringWrapper.refObjectArrayType,
  unbounded_sequence_of_wstrings: StringWrapper.refObjectArrayType,
});
const WStringsRefArray = ArrayType(WStringsRefStruct);
const WStringsRefStructArray = StructType({
  data: WStringsRefArray,
  size: ref.types.size_t,
  capacity: ref.types.size_t
});
// Define the wrapper class.
class WStringsWrapper {
  constructor(other) {
    this._wrapperFields = {};
    this._array_of_wstringsArray = [];
    this._bounded_sequence_of_wstringsArray = [];
    this._unbounded_sequence_of_wstringsArray = [];
    if (typeof other === 'object' && other._refObject) {
      this._refObject = new WStringsRefStruct(other._refObject.toObject());
      this._wstring_valueIntialized = true;
      this._wstring_value_default1Intialized = true;
      this._wstring_value_default2Intialized = true;
      this._wstring_value_default3Intialized = true;
      this._wrapperFields.array_of_wstrings = StringWrapper.createArray();
      this._wrapperFields.array_of_wstrings.copy(other._wrapperFields.array_of_wstrings);
      this.array_of_wstrings = other.array_of_wstrings;
      this._wrapperFields.bounded_sequence_of_wstrings = StringWrapper.createArray();
      this._wrapperFields.bounded_sequence_of_wstrings.copy(other._wrapperFields.bounded_sequence_of_wstrings);
      this.bounded_sequence_of_wstrings = other.bounded_sequence_of_wstrings;
      this._wrapperFields.unbounded_sequence_of_wstrings = StringWrapper.createArray();
      this._wrapperFields.unbounded_sequence_of_wstrings.copy(other._wrapperFields.unbounded_sequence_of_wstrings);
      this.unbounded_sequence_of_wstrings = other.unbounded_sequence_of_wstrings;
    } else if (typeof other !== 'undefined') {
      this._initMembers();
      translator.constructFromPlanObject(this, other);
    } else {
      this._initMembers();
    }
    this.freeze();
  }
  _initMembers() {
    this._refObject = new WStringsRefStruct();
    this._wstring_valueIntialized = false;
    this._refObject.wstring_value_default1 = "Hello world!";
    this._wstring_value_default1Intialized = true;
    this._refObject.wstring_value_default2 = "Hellö wörld!";
    this._wstring_value_default2Intialized = true;
    this._refObject.wstring_value_default3 = "ハローワールド";
    this._wstring_value_default3Intialized = true;
    this._wrapperFields.array_of_wstrings = StringWrapper.createArray();
    this._wrapperFields.bounded_sequence_of_wstrings = StringWrapper.createArray();
    this._wrapperFields.unbounded_sequence_of_wstrings = StringWrapper.createArray();
  }
  static createFromRefObject(refObject) {
    let self = new WStringsWrapper();
    self.copyRefObject(refObject);
    return self;
  }
  static createArray() {
    return new WStringsArrayWrapper;
  }
  static get ArrayType() {
    return WStringsArrayWrapper;
  }
  static get refObjectArrayType() {
    return WStringsRefStructArray
  }
  static get refObjectType() {
    return WStringsRefStruct;
  }
  toRawROS() {
    this.freeze(true);
    return this._refObject.ref();
  }
  freeze(own = false, checkConsistency = false) {
    if (checkConsistency) {
      if (!this._wstring_valueIntialized) {
        throw new TypeError('Invalid argument: wstring_value in WStrings');
      }
      if (!this._wstring_value_default1Intialized) {
        throw new TypeError('Invalid argument: wstring_value_default1 in WStrings');
      }
      if (!this._wstring_value_default2Intialized) {
        throw new TypeError('Invalid argument: wstring_value_default2 in WStrings');
      }
      if (!this._wstring_value_default3Intialized) {
        throw new TypeError('Invalid argument: wstring_value_default3 in WStrings');
      }
    }
    for (let i = 0; i < this._wrapperFields.array_of_wstrings.data.length; i++) {
      this._refObject.array_of_wstrings[i] = this._wrapperFields.array_of_wstrings.data[i];
    }
    if (!own) {
      this._wrapperFields.bounded_sequence_of_wstrings.fill(this._bounded_sequence_of_wstringsArray);
      this._wrapperFields.bounded_sequence_of_wstrings.freeze(own, checkConsistency);
      this._refObject.bounded_sequence_of_wstrings = this._wrapperFields.bounded_sequence_of_wstrings.refObject;
    } else {
      this._wrapperFields.bounded_sequence_of_wstrings.fill([]);
      this._wrapperFields.bounded_sequence_of_wstrings.freeze(own, checkConsistency);
      this._refObject.bounded_sequence_of_wstrings = this._wrapperFields.bounded_sequence_of_wstrings.refObject;
    }
    if (!own) {
      this._wrapperFields.unbounded_sequence_of_wstrings.fill(this._unbounded_sequence_of_wstringsArray);
      this._wrapperFields.unbounded_sequence_of_wstrings.freeze(own, checkConsistency);
      this._refObject.unbounded_sequence_of_wstrings = this._wrapperFields.unbounded_sequence_of_wstrings.refObject;
    } else {
      this._wrapperFields.unbounded_sequence_of_wstrings.fill([]);
      this._wrapperFields.unbounded_sequence_of_wstrings.freeze(own, checkConsistency);
      this._refObject.unbounded_sequence_of_wstrings = this._wrapperFields.unbounded_sequence_of_wstrings.refObject;
    }
  }
  serialize() {
    this.freeze(false, true);
    return this._refObject.ref();
  }
  deserialize(refObject) {
    this._wstring_valueIntialized = true;
    this._refObject.wstring_value = refObject.wstring_value;
    this._wstring_value_default1Intialized = true;
    this._refObject.wstring_value_default1 = refObject.wstring_value_default1;
    this._wstring_value_default2Intialized = true;
    this._refObject.wstring_value_default2 = refObject.wstring_value_default2;
    this._wstring_value_default3Intialized = true;
    this._refObject.wstring_value_default3 = refObject.wstring_value_default3;
    this._refObject.array_of_wstrings = refObject.array_of_wstrings;
    this._wrapperFields.array_of_wstrings.fill(refObject.array_of_wstrings.toArray());
    refObject.bounded_sequence_of_wstrings.data.length = refObject.bounded_sequence_of_wstrings.size;
    for (let index = 0; index < refObject.bounded_sequence_of_wstrings.size; index++) {
      this._bounded_sequence_of_wstringsArray[index] = refObject.bounded_sequence_of_wstrings.data[index].data;
    }
    refObject.unbounded_sequence_of_wstrings.data.length = refObject.unbounded_sequence_of_wstrings.size;
    for (let index = 0; index < refObject.unbounded_sequence_of_wstrings.size; index++) {
      this._unbounded_sequence_of_wstringsArray[index] = refObject.unbounded_sequence_of_wstrings.data[index].data;
    }
  }
  toPlainObject(enableTypedArray) {
    return translator.toPlainObject(this, enableTypedArray);
  }
  static freeStruct(refObject) {
    if (refObject.bounded_sequence_of_wstrings.size != 0) {
      StringWrapper.ArrayType.freeArray(refObject.bounded_sequence_of_wstrings);
      if (StringWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.bounded_sequence_of_wstrings, StringWrapper.refObjectArrayType, 'data');
      }
    }
    if (refObject.unbounded_sequence_of_wstrings.size != 0) {
      StringWrapper.ArrayType.freeArray(refObject.unbounded_sequence_of_wstrings);
      if (StringWrapper.ArrayType.useTypedArray) {
        // Do nothing, the v8 will take the ownership of the ArrayBuffer used by the typed array.
      } else {
        deallocator.freeStructMember(refObject.unbounded_sequence_of_wstrings, StringWrapper.refObjectArrayType, 'data');
      }
    }
  }
  static destoryRawROS(msg) {
    WStringsWrapper.freeStruct(msg.refObject);
  }
  static type() {
    return {pkgName: 'test_msgs', subFolder: 'msg', interfaceName: 'WStrings'};
  }
  static isPrimitive() {
    return false;
  }
  static get isROSArray() {
    return false;
  }
  get refObject() {
    return this._refObject;
  }
  get wstring_value() {
    if (!this._wstring_valueIntialized) {
      return undefined;
    }
    return this._refObject.wstring_value;
  }
  set wstring_value(value) {
    this._wstring_valueIntialized = true;
    this._refObject.wstring_value = value;
  }
  get wstring_value_default1() {
    if (!this._wstring_value_default1Intialized) {
      return undefined;
    }
    return this._refObject.wstring_value_default1;
  }
  set wstring_value_default1(value) {
    this._wstring_value_default1Intialized = true;
    this._refObject.wstring_value_default1 = value;
  }
  get wstring_value_default2() {
    if (!this._wstring_value_default2Intialized) {
      return undefined;
    }
    return this._refObject.wstring_value_default2;
  }
  set wstring_value_default2(value) {
    this._wstring_value_default2Intialized = true;
    this._refObject.wstring_value_default2 = value;
  }
  get wstring_value_default3() {
    if (!this._wstring_value_default3Intialized) {
      return undefined;
    }
    return this._refObject.wstring_value_default3;
  }
  set wstring_value_default3(value) {
    this._wstring_value_default3Intialized = true;
    this._refObject.wstring_value_default3 = value;
  }
  get array_of_wstrings() {
    return this._array_of_wstringsArray;
  }
  set array_of_wstrings(value) {
    if (value.length !== 3) {
      throw new RangeError('The length of the array must be 3.');
    }
    this._array_of_wstringsArray = value;
  }
  get bounded_sequence_of_wstrings() {
    return this._bounded_sequence_of_wstringsArray;
  }
  set bounded_sequence_of_wstrings(value) {
    if (value.length > 3) {
      throw new RangeError('The length of array bounded_sequence_of_wstrings must be <= 3.');
    }
    this._bounded_sequence_of_wstringsArray = value;
  }
  get unbounded_sequence_of_wstrings() {
    return this._unbounded_sequence_of_wstringsArray;
  }
  set unbounded_sequence_of_wstrings(value) {
    this._unbounded_sequence_of_wstringsArray = value;
  }
  copyRefObject(refObject) {
    this._refObject = new WStringsRefStruct(refObject.toObject());
    this._wstring_valueIntialized = true;
    this._wstring_value_default1Intialized = true;
    this._wstring_value_default2Intialized = true;
    this._wstring_value_default3Intialized = true;
    refObject.array_of_wstrings.data.length = refObject.array_of_wstrings.size;
    for (let index = 0; index < refObject.array_of_wstrings.size; index++) {
      this._array_of_wstringsArray[index] = refObject.array_of_wstrings.data[index].data;
    }
    refObject.bounded_sequence_of_wstrings.data.length = refObject.bounded_sequence_of_wstrings.size;
    for (let index = 0; index < refObject.bounded_sequence_of_wstrings.size; index++) {
      this._bounded_sequence_of_wstringsArray[index] = refObject.bounded_sequence_of_wstrings.data[index].data;
    }
    refObject.unbounded_sequence_of_wstrings.data.length = refObject.unbounded_sequence_of_wstrings.size;
    for (let index = 0; index < refObject.unbounded_sequence_of_wstrings.size; index++) {
      this._unbounded_sequence_of_wstringsArray[index] = refObject.unbounded_sequence_of_wstrings.data[index].data;
    }
  }
  copy(other) {
    this._refObject = new WStringsRefStruct(other._refObject.toObject());
    this._wstring_valueIntialized = true;
    this._wstring_value_default1Intialized = true;
    this._wstring_value_default2Intialized = true;
    this._wstring_value_default3Intialized = true;
    this._array_of_wstringsArray = other._array_of_wstringsArray.slice();
    this._bounded_sequence_of_wstringsArray = other._bounded_sequence_of_wstringsArray.slice();
    this._unbounded_sequence_of_wstringsArray = other._unbounded_sequence_of_wstringsArray.slice();
  }
  static get classType() {
    return WStringsWrapper;
  }
  static get ROSMessageDef() {
    return {"constants":[],"fields":[{"name":"wstring_value","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"wstring","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"wstring_value_default1","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"wstring","stringUpperBound":null,"isPrimitiveType":true},"default_value":"Hello world!"},{"name":"wstring_value_default2","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"wstring","stringUpperBound":null,"isPrimitiveType":true},"default_value":"Hellö wörld!"},{"name":"wstring_value_default3","type":{"isArray":false,"arraySize":null,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":false,"pkgName":null,"type":"wstring","stringUpperBound":null,"isPrimitiveType":true},"default_value":"ハローワールド"},{"name":"array_of_wstrings","type":{"isArray":true,"arraySize":3,"isUpperBound":false,"isDynamicArray":false,"isFixedSizeArray":true,"pkgName":null,"type":"wstring","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"bounded_sequence_of_wstrings","type":{"isArray":true,"arraySize":3,"isUpperBound":true,"isDynamicArray":true,"isFixedSizeArray":false,"pkgName":null,"type":"wstring","stringUpperBound":null,"isPrimitiveType":true},"default_value":null},{"name":"unbounded_sequence_of_wstrings","type":{"isArray":true,"arraySize":null,"isUpperBound":false,"isDynamicArray":true,"isFixedSizeArray":null,"pkgName":null,"type":"wstring","stringUpperBound":null,"isPrimitiveType":true},"default_value":null}],"baseType":{"pkgName":"test_msgs","type":"WStrings","stringUpperBound":null,"isPrimitiveType":false},"msgName":"WStrings"};
  }
  hasMember(name) {
    let memberNames = ["wstring_value","wstring_value_default1","wstring_value_default2","wstring_value_default3","array_of_wstrings","bounded_sequence_of_wstrings","unbounded_sequence_of_wstrings"];
    return memberNames.indexOf(name) !== -1;
  }
}
// Define the wrapper of array class.
class WStringsArrayWrapper {
  constructor(size = 0) {
    this._resize(size);
  }
  toRawROS() {
    return this._refObject.ref();
  }
  fill(values) {
    const length = values.length;
    this._resize(length);
    values.forEach((value, index) => {
      if (value instanceof WStringsWrapper) {
        this._wrappers[index].copy(value);
      } else {
        this._wrappers[index] = new WStringsWrapper(value);
      }
    });
  }
  // Put all data currently stored in `this._wrappers` into `this._refObject`
  freeze(own) {
    this._wrappers.forEach((wrapper, index) => {
      wrapper.freeze(own);
      this._refArray[index] = wrapper.refObject;
    });
    this._refObject.size = this._wrappers.length;
    this._refObject.capacity = this._wrappers.length;
    if (this._refObject.capacity === 0) {
      this._refObject.data = null
    } else {
    this._refObject.data = this._refArray.buffer;
    }
  }
  get refObject() {
    return this._refObject;
  }
  get data() {
    return this._wrappers;
  }
  get size() {
    return this._wrappers.length;
  }
  set size(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to WStringsArrayWrapper.size setter');
      return;
    }
    return this._resize(value);
  }
  get capacity() {
    return this._wrappers.length;
  }
  set capacity(value) {
    if (typeof value != 'number') {
      throw new TypeError('Invalid argument: should provide a number to WStringsArrayWrapper.capacity setter');
    }
    return this._resize(value);
  }
  get refObject() {
    return this._refObject;
  }
  _resize(size) {
    if (size < 0) {
      throw new RangeError('Invalid argument: should provide a positive number');
      return;
    }
    this._refArray = new WStringsRefArray(size);
    this._refObject = new WStringsRefStructArray();
    this._refObject.size = size;
    this._refObject.capacity = size;
    this._wrappers = new Array();
    for (let i = 0; i < size; i++) {
      this._wrappers.push(new WStringsWrapper());
    }
  }
  // Copy all data from `this._refObject` into `this._wrappers`
  copyRefObject(refObject) {
    this._refObject = refObject;
    let refObjectArray = this._refObject.data;
    refObjectArray.length = this._refObject.size;
    this._resize(this._refObject.size);
    for (let index = 0; index < this._refObject.size; index++) {
      this._wrappers[index].copyRefObject(refObjectArray[index]);
    }
  }
  copy(other) {
    if (! (other instanceof WStringsArrayWrapper)) {
      throw new TypeError('Invalid argument: should provide "WStringsArrayWrapper".');
    }
    this._resize(other.size);
    // Array deep copy
    other._wrappers.forEach((wrapper, index) => {
      this._wrappers[index].copy(wrapper);
    });
  }
  static freeArray(refObject) {
    let refObjectArray = refObject.data;
    refObjectArray.length = refObject.size;
    for (let index = 0; index < refObject.size; index++) {
      WStringsWrapper.freeStruct(refObjectArray[index]);
    }
  }
  static get elementType() {
    return WStringsWrapper;
  }
  static get isROSArray() {
    return true;
  }
  static get useTypedArray() {
    return false;
  }
  get classType() {
    return WStringsArrayWrapper;
  }
}
module.exports = WStringsWrapper;
/*
 * The following is the original spec object coming from parser:
{
  "constants": [],
  "fields": [
    {
      "name": "wstring_value",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "wstring",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "wstring_value_default1",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "wstring",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": "Hello world!"
    },
    {
      "name": "wstring_value_default2",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "wstring",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": "Hellö wörld!"
    },
    {
      "name": "wstring_value_default3",
      "type": {
        "isArray": false,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "wstring",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": "ハローワールド"
    },
    {
      "name": "array_of_wstrings",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": false,
        "isDynamicArray": false,
        "isFixedSizeArray": true,
        "pkgName": null,
        "type": "wstring",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "bounded_sequence_of_wstrings",
      "type": {
        "isArray": true,
        "arraySize": 3,
        "isUpperBound": true,
        "isDynamicArray": true,
        "isFixedSizeArray": false,
        "pkgName": null,
        "type": "wstring",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    },
    {
      "name": "unbounded_sequence_of_wstrings",
      "type": {
        "isArray": true,
        "arraySize": null,
        "isUpperBound": false,
        "isDynamicArray": true,
        "isFixedSizeArray": null,
        "pkgName": null,
        "type": "wstring",
        "stringUpperBound": null,
        "isPrimitiveType": true
      },
      "default_value": null
    }
  ],
  "baseType": {
    "pkgName": "test_msgs",
    "type": "WStrings",
    "stringUpperBound": null,
    "isPrimitiveType": false
  },
  "msgName": "WStrings"
}
*/
